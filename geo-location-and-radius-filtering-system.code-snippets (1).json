{"generator":"Code Snippets v3.7.0","date_created":"2025-09-26 10:48","snippets":[{"id":28,"name":"Geo-Location and Radius Filtering System","code":"\n\/**\n * Simple Geo-Location Integration\n * This connects to your EXISTING browse functions\n *\/\n\n\/\/ First, let's just extend your existing browse functionality\nadd_filter('jobmatch_browse_jobs_args', 'jobmatch_add_radius_filter', 10, 2);\n\nfunction jobmatch_add_radius_filter($args, $request) {\n    \/\/ Check if radius filter is set\n    if (isset($request['radius']) && !empty($request['radius'])) {\n        $radius = $request['radius'];\n        $user_id = get_current_user_id();\n        \n        \/\/ Special cases\n        if ($radius === 'remote' || $radius === 'germany') {\n            \/\/ Don't filter by location\n            return $args;\n        }\n        \n        \/\/ Get user's postal code\n        $user_postal = get_user_meta($user_id, 'postal_code', true);\n        if (!$user_postal) {\n            return $args;\n        }\n        \n        \/\/ For now, use a simple postal code range approach\n        \/\/ German postal codes are 5 digits, we can use proximity\n        $postal_base = substr($user_postal, 0, 2); \/\/ First 2 digits\n        \n        \/\/ Create postal code ranges based on radius\n        $postal_ranges = jobmatch_get_postal_ranges($postal_base, intval($radius));\n        \n        if (!empty($postal_ranges)) {\n            $args['meta_query'][] = array(\n                'key' => 'company_postal',\n                'value' => $postal_ranges,\n                'compare' => 'IN'\n            );\n        }\n    }\n    \n    return $args;\n}\n\n\/\/ Simple postal code range calculator for Germany\nfunction jobmatch_get_postal_ranges($base_postal, $radius_km) {\n    \/\/ Approximate postal code regions by radius\n    \/\/ This is simplified - in production you'd use real geocoding\n    \n    $ranges = array();\n    $base = intval($base_postal);\n    \n    \/\/ Rough approximation: each postal district covers ~50km\n    $postal_spread = ceil($radius_km \/ 50);\n    \n    for ($i = -$postal_spread; $i <= $postal_spread; $i++) {\n        $postal = $base + $i;\n        if ($postal >= 10 && $postal <= 99) { \/\/ Valid German postal prefixes\n            $ranges[] = str_pad($postal, 2, '0', STR_PAD_LEFT);\n        }\n    }\n    \n    return $ranges;\n}\n\n\/\/ Add filter controls to your existing dashboards\nadd_action('jobmatch_before_browse_results', 'jobmatch_render_simple_filters');\n\nfunction jobmatch_render_simple_filters() {\n    $user_role = get_user_meta(get_current_user_id(), 'user_role', true);\n    ?>\n    <div class=\"jobmatch-simple-filters\" style=\"background: #f5f5f5; padding: 15px; margin-bottom: 20px; border-radius: 8px;\">\n        <h4>Filter Options<\/h4>\n        \n        <div style=\"display: flex; gap: 15px; flex-wrap: wrap;\">\n            <!-- Distance Filter -->\n            <div>\n                <label>Distance:<\/label>\n                <select class=\"filter-distance\" onchange=\"filterResults()\">\n                    <option value=\"\">Any Distance<\/option>\n                    <option value=\"30\">Within 30 km<\/option>\n                    <option value=\"50\">Within 50 km<\/option>\n                    <option value=\"100\">Within 100 km<\/option>\n                    <option value=\"germany\">Germany-wide<\/option>\n                    <option value=\"remote\">Remote Only<\/option>\n                <\/select>\n            <\/div>\n            \n            <?php if ($user_role === 'developer'): ?>\n            <!-- Salary Filter for Developers -->\n            <div>\n                <label>Min Salary (\u20ac):<\/label>\n                <input type=\"number\" class=\"filter-salary\" placeholder=\"e.g. 50000\" onchange=\"filterResults()\">\n            <\/div>\n            <?php endif; ?>\n            \n            <!-- Tech Stack Filter -->\n            <div>\n                <label>Tech Stack:<\/label>\n                <select class=\"filter-tech\" onchange=\"filterResults()\">\n                    <option value=\"\">Any Tech<\/option>\n                    <?php\n                    $terms = get_terms('tech_stack', array('hide_empty' => false));\n                    if (!is_wp_error($terms)) {\n                        foreach ($terms as $term) {\n                            echo '<option value=\"' . $term->term_id . '\">' . $term->name . '<\/option>';\n                        }\n                    }\n                    ?>\n                <\/select>\n            <\/div>\n            \n            <div>\n                <button onclick=\"resetFilters()\" style=\"padding: 5px 15px;\">Reset<\/button>\n            <\/div>\n        <\/div>\n    <\/div>\n    \n    <script>\n    function filterResults() {\n        \/\/ Get current filter values\n        var distance = document.querySelector('.filter-distance').value;\n        var tech = document.querySelector('.filter-tech').value;\n        var salary = document.querySelector('.filter-salary') ? document.querySelector('.filter-salary').value : '';\n        \n        \/\/ Update the browse results\n        var currentUrl = window.location.href.split('?')[0];\n        var params = new URLSearchParams();\n        \n        if (distance) params.append('radius', distance);\n        if (tech) params.append('tech', tech);\n        if (salary) params.append('min_salary', salary);\n        \n        \/\/ Reload with filters\n        window.location.href = currentUrl + '?' + params.toString();\n    }\n    \n    function resetFilters() {\n        window.location.href = window.location.href.split('?')[0];\n    }\n    <\/script>\n    <?php\n}\n\n\/\/ Hook into your existing job query\nadd_action('pre_get_posts', 'jobmatch_apply_browse_filters');\n\nfunction jobmatch_apply_browse_filters($query) {\n    \/\/ Only apply to main query on browse pages\n    if (!is_admin() && $query->is_main_query()) {\n        \n        \/\/ Check if we're on a browse page\n        if (get_query_var('pagename') === 'browse-jobs' || get_query_var('pagename') === 'browse-developers') {\n            \n            \/\/ Apply radius filter\n            if (isset($_GET['radius'])) {\n                $radius = sanitize_text_field($_GET['radius']);\n                \/\/ Add to meta query or tax query as needed\n                \/\/ This will work with your existing job queries\n            }\n            \n            \/\/ Apply tech filter\n            if (isset($_GET['tech'])) {\n                $tech_id = intval($_GET['tech']);\n                $query->set('tax_query', array(\n                    array(\n                        'taxonomy' => 'tech_stack',\n                        'field' => 'term_id',\n                        'terms' => $tech_id\n                    )\n                ));\n            }\n            \n            \/\/ Apply salary filter\n            if (isset($_GET['min_salary'])) {\n                $min_salary = intval($_GET['min_salary']);\n                $query->set('meta_query', array(\n                    array(\n                        'key' => 'salary_max',\n                        'value' => $min_salary,\n                        'compare' => '>=',\n                        'type' => 'NUMERIC'\n                    )\n                ));\n            }\n        }\n    }\n}\n\n\/\/ Alternative: If you need AJAX filtering without page reload\nadd_action('wp_ajax_jobmatch_filter_browse', 'jobmatch_ajax_filter_handler');\nadd_action('wp_ajax_nopriv_jobmatch_filter_browse', 'jobmatch_ajax_filter_handler');\n\nfunction jobmatch_ajax_filter_handler() {\n    \/\/ Get filters from AJAX request\n    $filters = array(\n        'radius' => isset($_POST['radius']) ? sanitize_text_field($_POST['radius']) : '',\n        'tech' => isset($_POST['tech']) ? intval($_POST['tech']) : '',\n        'min_salary' => isset($_POST['min_salary']) ? intval($_POST['min_salary']) : 0\n    );\n    \n    \/\/ Build query args\n    $args = array(\n        'post_type' => 'jobs',\n        'posts_per_page' => 20\n    );\n    \n    \/\/ Apply filters to args\n    if ($filters['tech']) {\n        $args['tax_query'] = array(\n            array(\n                'taxonomy' => 'tech_stack',\n                'field' => 'term_id',\n                'terms' => $filters['tech']\n            )\n        );\n    }\n    \n    if ($filters['min_salary']) {\n        $args['meta_query'] = array(\n            array(\n                'key' => 'salary_max',\n                'value' => $filters['min_salary'],\n                'compare' => '>=',\n                'type' => 'NUMERIC'\n            )\n        );\n    }\n    \n    \/\/ Get posts\n    $jobs = get_posts($args);\n    \n    \/\/ Output HTML\n    ob_start();\n    if ($jobs) {\n        foreach ($jobs as $job) {\n            \/\/ Use your existing job card template\n            echo '<div class=\"job-card\">';\n            echo '<h3>' . get_the_title($job) . '<\/h3>';\n            echo '<\/div>';\n        }\n    } else {\n        echo '<p>No jobs found with these filters.<\/p>';\n    }\n    $html = ob_get_clean();\n    \n    wp_send_json_success(array('html' => $html));\n}","active":true,"modified":"2025-09-24 20:12:39","revision":"1"}]}