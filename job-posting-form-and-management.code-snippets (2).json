{"generator":"Code Snippets v3.7.0","date_created":"2025-09-26 10:47","snippets":[{"id":15,"name":"Job Posting Form and Management","code":"\n\/**\n * Job Posting Form and Management\n * Add this to Code Snippets plugin\n * Use shortcode [job_posting_form] on your Post Job page\n *\/\n\n\/\/ Job Posting Form Shortcode\nadd_shortcode('job_posting_form', 'jobmatch_job_posting_form');\n\nfunction jobmatch_job_posting_form($atts) {\n    \/\/ Security check\n    if (!is_user_logged_in()) {\n        return '<p>Please <a href=\"' . wp_login_url() . '\">log in<\/a> to post a job.<\/p>';\n    }\n    \n    $current_user = wp_get_current_user();\n    $user_role = get_user_meta($current_user->ID, 'user_role', true);\n    \n    if ($user_role !== 'company') {\n        return '<p>Only companies can post jobs. <a href=\"' . home_url('\/register\/') . '\">Register as a company<\/a> to post opportunities.<\/p>';\n    }\n    \n    \/\/ Check if editing existing job\n    $job_id = isset($_GET['job_id']) ? intval($_GET['job_id']) : 0;\n    $job = null;\n    \n    if ($job_id) {\n        $job = get_post($job_id);\n        \/\/ Security check - ensure user owns the job\n        if (!$job || $job->post_author != $current_user->ID || $job->post_type !== 'jobs') {\n            return '<p>You do not have permission to edit this job.<\/p>';\n        }\n    }\n    \n    \/\/ Process form submission\n    if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['job_posting_nonce'])) {\n        $result = jobmatch_process_job_posting($_POST, $job_id, $current_user->ID);\n        if ($result['success']) {\n            wp_redirect($result['redirect']);\n            exit;\n        } else {\n            $error_message = $result['message'];\n        }\n    }\n    \n    ob_start();\n    ?>\n    \n    <div class=\"job-posting-container\">\n        <div class=\"posting-header\">\n            <h1><?php echo $job_id ? 'Edit Job Posting' : 'Post a New Job'; ?><\/h1>\n            <p>Find the perfect developer for your team<\/p>\n        <\/div>\n        \n        <?php if (isset($error_message)): ?>\n            <div class=\"alert alert-error\"><?php echo esc_html($error_message); ?><\/div>\n        <?php endif; ?>\n        \n        <form method=\"POST\" class=\"job-posting-form\" id=\"jobPostingForm\">\n            <?php wp_nonce_field('job_posting', 'job_posting_nonce'); ?>\n            <input type=\"hidden\" name=\"job_action\" value=\"<?php echo $job_id ? 'edit' : 'create'; ?>\">\n            \n            <!-- Step 1: Basic Information -->\n            <div class=\"form-section\">\n                <h3>\ud83d\udccb Basic Information<\/h3>\n                \n                <div class=\"form-group\">\n                    <label for=\"job_title\">Job Title *<\/label>\n                    <input type=\"text\" id=\"job_title\" name=\"job_title\" required \n                           value=\"<?php echo $job ? esc_attr($job->post_title) : ''; ?>\"\n                           placeholder=\"e.g., Senior Full Stack Developer\">\n                    <small>Be specific about the role and seniority level<\/small>\n                <\/div>\n                \n                <div class=\"form-group\">\n                    <label for=\"job_description\">Job Description *<\/label>\n                    <textarea id=\"job_description\" name=\"job_description\" rows=\"8\" required\n                              placeholder=\"Describe the role, responsibilities, and what makes this opportunity special...\"><?php echo $job ? esc_textarea($job->post_content) : ''; ?><\/textarea>\n                    <small>Include key responsibilities, team structure, and growth opportunities<\/small>\n                <\/div>\n                \n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"work_type\">Employment Type *<\/label>\n                        <select id=\"work_type\" name=\"work_type\" required>\n                            <?php\n                            $work_type = $job ? get_post_meta($job->ID, 'work_type', true) : '';\n                            $types = array(\n                                'full-time' => 'Full-time',\n                                'part-time' => 'Part-time',\n                                'contract' => 'Contract',\n                                'freelance' => 'Freelance',\n                                'internship' => 'Internship'\n                            );\n                            foreach ($types as $value => $label):\n                            ?>\n                                <option value=\"<?php echo $value; ?>\" <?php selected($work_type, $value); ?>>\n                                    <?php echo $label; ?>\n                                <\/option>\n                            <?php endforeach; ?>\n                        <\/select>\n                    <\/div>\n                    \n                    <div class=\"form-group\">\n                        <label for=\"experience_level\">Experience Level *<\/label>\n                        <select id=\"experience_level\" name=\"experience_level\" required>\n                            <?php\n                            $exp_level = $job ? get_post_meta($job->ID, 'required_experience', true) : '';\n                            $levels = array(\n                                'junior' => 'Junior (0-2 years)',\n                                'mid' => 'Mid-level (2-5 years)',\n                                'senior' => 'Senior (5+ years)',\n                                'lead' => 'Lead\/Architect (8+ years)'\n                            );\n                            foreach ($levels as $value => $label):\n                            ?>\n                                <option value=\"<?php echo $value; ?>\" <?php selected($exp_level, $value); ?>>\n                                    <?php echo $label; ?>\n                                <\/option>\n                            <?php endforeach; ?>\n                        <\/select>\n                    <\/div>\n                <\/div>\n            <\/div>\n            \n            <!-- Step 2: Technical Requirements -->\n            <div class=\"form-section\">\n                <h3>\ud83d\udee0\ufe0f Technical Requirements<\/h3>\n                \n                <div class=\"form-group\">\n                    <label>Required Tech Stack *<\/label>\n                    <p class=\"field-description\">Select the technologies required for this role (minimum 3)<\/p>\n                    <div class=\"tech-stack-grid\">\n                        <?php\n                        $selected_tech = $job ? wp_get_post_terms($job->ID, 'tech_stack', array('fields' => 'slugs')) : array();\n                        $tech_categories = array(\n                            'Frontend' => array('React', 'Vue.js', 'Angular', 'JavaScript', 'TypeScript', 'HTML\/CSS', 'Svelte'),\n                            'Backend' => array('Node.js', 'Python', 'PHP', 'Java', 'C#', 'Ruby', 'Go', 'Rust'),\n                            'Mobile' => array('React Native', 'Flutter', 'iOS', 'Android', 'Swift', 'Kotlin'),\n                            'DevOps' => array('AWS', 'Docker', 'Kubernetes', 'Azure', 'GCP', 'Jenkins', 'Terraform'),\n                            'Database' => array('PostgreSQL', 'MongoDB', 'MySQL', 'Redis', 'Elasticsearch', 'GraphQL'),\n                            'Other' => array('Git', 'Linux', 'Agile', 'Machine Learning', 'Blockchain', 'UI\/UX')\n                        );\n                        \n                        foreach ($tech_categories as $category => $technologies):\n                        ?>\n                            <div class=\"tech-category\">\n                                <h5><?php echo $category; ?><\/h5>\n                                <div class=\"tech-checkboxes\">\n                                    <?php foreach ($technologies as $tech):\n                                        $tech_slug = sanitize_title($tech);\n                                    ?>\n                                        <label class=\"tech-checkbox\">\n                                            <input type=\"checkbox\" name=\"tech_stack[]\" value=\"<?php echo esc_attr($tech_slug); ?>\"\n                                                   <?php checked(in_array($tech_slug, $selected_tech)); ?>>\n                                            <span><?php echo $tech; ?><\/span>\n                                        <\/label>\n                                    <?php endforeach; ?>\n                                <\/div>\n                            <\/div>\n                        <?php endforeach; ?>\n                    <\/div>\n                <\/div>\n                \n                <div class=\"form-group\">\n                    <label for=\"nice_to_have\">Nice to Have Skills<\/label>\n                    <textarea id=\"nice_to_have\" name=\"nice_to_have\" rows=\"3\"\n                              placeholder=\"Additional skills that would be beneficial but not required...\"><?php echo $job ? esc_textarea(get_post_meta($job->ID, 'nice_to_have', true)) : ''; ?><\/textarea>\n                <\/div>\n            <\/div>\n            \n            <!-- Step 3: Compensation & Benefits -->\n            <div class=\"form-section\">\n                <h3>\ud83d\udcb0 Compensation & Benefits<\/h3>\n                \n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"salary_min\">Minimum Salary (\u20ac\/year) *<\/label>\n                        <input type=\"number\" id=\"salary_min\" name=\"salary_min\" required \n                               min=\"30000\" max=\"500000\" step=\"1000\"\n                               value=\"<?php echo $job ? get_post_meta($job->ID, 'salary_min', true) : ''; ?>\"\n                               placeholder=\"50000\">\n                    <\/div>\n                    \n                    <div class=\"form-group\">\n                        <label for=\"salary_max\">Maximum Salary (\u20ac\/year)<\/label>\n                        <input type=\"number\" id=\"salary_max\" name=\"salary_max\" \n                               min=\"30000\" max=\"500000\" step=\"1000\"\n                               value=\"<?php echo $job ? get_post_meta($job->ID, 'salary_max', true) : ''; ?>\"\n                               placeholder=\"70000\">\n                        <small>Leave empty if fixed salary<\/small>\n                    <\/div>\n                <\/div>\n                \n                <div class=\"form-group\">\n                    <label>Benefits Package<\/label>\n                    <div class=\"benefits-grid\">\n                        <?php\n                        $selected_benefits = $job ? get_post_meta($job->ID, 'benefits', true) : array();\n                        if (!is_array($selected_benefits)) $selected_benefits = array();\n                        \n                        $benefits = array(\n                            'health_insurance' => '\ud83c\udfe5 Health Insurance',\n                            'dental_vision' => '\ud83e\uddb7 Dental & Vision',\n                            'retirement' => '\ud83d\udcbc Retirement Plan',\n                            'equity' => '\ud83d\udcc8 Equity\/Stock Options',\n                            'pto' => '\ud83c\udfd6\ufe0f Flexible PTO',\n                            'parental_leave' => '\ud83d\udc76 Parental Leave',\n                            'education_budget' => '\ud83d\udcda Education Budget',\n                            'home_office' => '\ud83c\udfe0 Home Office Budget',\n                            'gym' => '\ud83d\udcaa Gym Membership',\n                            'meals' => '\ud83c\udf7d\ufe0f Free Meals\/Snacks',\n                            'transport' => '\ud83d\ude97 Transport Allowance',\n                            'childcare' => '\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67 Childcare Support'\n                        );\n                        \n                        foreach ($benefits as $value => $label):\n                        ?>\n                            <label class=\"benefit-checkbox\">\n                                <input type=\"checkbox\" name=\"benefits[]\" value=\"<?php echo $value; ?>\"\n                                       <?php checked(in_array($value, $selected_benefits)); ?>>\n                                <span><?php echo $label; ?><\/span>\n                            <\/label>\n                        <?php endforeach; ?>\n                    <\/div>\n                <\/div>\n            <\/div>\n            \n            <!-- Step 4: Location & Remote Work -->\n            <div class=\"form-section\">\n                <h3>\ud83d\udccd Location & Work Arrangement<\/h3>\n                \n                <div class=\"form-group\">\n                    <label>Work Arrangement *<\/label>\n                    <?php\n                    $work_arrangement = $job ? get_post_meta($job->ID, 'work_arrangement', true) : '';\n                    ?>\n                    <div class=\"radio-group\">\n                        <label class=\"radio-option\">\n                            <input type=\"radio\" name=\"work_arrangement\" value=\"remote\" required\n                                   <?php checked($work_arrangement, 'remote'); ?>>\n                            <span class=\"radio-content\">\n                                <span class=\"radio-icon\">\ud83c\udf0d<\/span>\n                                <span class=\"radio-text\">\n                                    <strong>Fully Remote<\/strong>\n                                    <small>Work from anywhere<\/small>\n                                <\/span>\n                            <\/span>\n                        <\/label>\n                        \n                        <label class=\"radio-option\">\n                            <input type=\"radio\" name=\"work_arrangement\" value=\"hybrid\" required\n                                   <?php checked($work_arrangement, 'hybrid'); ?>>\n                            <span class=\"radio-content\">\n                                <span class=\"radio-icon\">\ud83c\udfe2<\/span>\n                                <span class=\"radio-text\">\n                                    <strong>Hybrid<\/strong>\n                                    <small>Mix of office and remote<\/small>\n                                <\/span>\n                            <\/span>\n                        <\/label>\n                        \n                        <label class=\"radio-option\">\n                            <input type=\"radio\" name=\"work_arrangement\" value=\"onsite\" required\n                                   <?php checked($work_arrangement, 'onsite'); ?>>\n                            <span class=\"radio-content\">\n                                <span class=\"radio-icon\">\ud83c\udfdb\ufe0f<\/span>\n                                <span class=\"radio-text\">\n                                    <strong>On-site Only<\/strong>\n                                    <small>Office-based position<\/small>\n                                <\/span>\n                            <\/span>\n                        <\/label>\n                    <\/div>\n                <\/div>\n                \n                <div class=\"form-group\" id=\"location-group\">\n                    <label for=\"job_location\">Office Location<\/label>\n                    <input type=\"text\" id=\"job_location\" name=\"job_location\"\n                           value=\"<?php echo $job ? esc_attr(get_post_meta($job->ID, 'job_location', true)) : ''; ?>\"\n                           placeholder=\"e.g., Berlin, Germany\">\n                    <small>Required for hybrid and on-site positions<\/small>\n                <\/div>\n                \n                <div class=\"form-group\">\n                    <label for=\"job_postal_code\">Office Postal Code<\/label>\n                    <input type=\"text\" id=\"job_postal_code\" name=\"job_postal_code\"\n                           value=\"<?php echo $job ? esc_attr(get_post_meta($job->ID, 'job_postal_code', true)) : ''; ?>\"\n                           placeholder=\"10115\" maxlength=\"10\">\n                    <small>Used for location-based matching<\/small>\n                <\/div>\n            <\/div>\n            \n            <!-- Step 5: Application Requirements -->\n            <div class=\"form-section\">\n                <h3>\ud83d\udcdd Application Requirements<\/h3>\n                \n                <div class=\"form-group\">\n                    <label for=\"requirements\">Must-Have Requirements *<\/label>\n                    <textarea id=\"requirements\" name=\"requirements\" rows=\"4\" required\n                              placeholder=\"\u2022 Minimum 3 years of React experience&#10;\u2022 Strong understanding of REST APIs&#10;\u2022 Experience with agile methodologies...\"><?php echo $job ? esc_textarea(get_post_meta($job->ID, 'requirements', true)) : ''; ?><\/textarea>\n                    <small>List the essential qualifications and experience<\/small>\n                <\/div>\n                \n                <div class=\"form-group\">\n                    <label for=\"application_deadline\">Application Deadline<\/label>\n                    <input type=\"date\" id=\"application_deadline\" name=\"application_deadline\"\n                           value=\"<?php echo $job ? get_post_meta($job->ID, 'application_deadline', true) : ''; ?>\"\n                           min=\"<?php echo date('Y-m-d'); ?>\">\n                    <small>Leave empty for no deadline<\/small>\n                <\/div>\n                \n                <div class=\"form-group\">\n                    <label>Application Requirements<\/label>\n                    <div class=\"checkbox-group\">\n                        <?php\n                        $app_requirements = $job ? get_post_meta($job->ID, 'application_requirements', true) : array();\n                        if (!is_array($app_requirements)) $app_requirements = array();\n                        ?>\n                        <label class=\"checkbox-option\">\n                            <input type=\"checkbox\" name=\"application_requirements[]\" value=\"portfolio\"\n                                   <?php checked(in_array('portfolio', $app_requirements)); ?>>\n                            <span>Portfolio\/Work samples required<\/span>\n                        <\/label>\n                        <label class=\"checkbox-option\">\n                            <input type=\"checkbox\" name=\"application_requirements[]\" value=\"github\"\n                                   <?php checked(in_array('github', $app_requirements)); ?>>\n                            <span>GitHub profile required<\/span>\n                        <\/label>\n                        <label class=\"checkbox-option\">\n                            <input type=\"checkbox\" name=\"application_requirements[]\" value=\"cover_letter\"\n                                   <?php checked(in_array('cover_letter', $app_requirements)); ?>>\n                            <span>Cover letter required<\/span>\n                        <\/label>\n                    <\/div>\n                <\/div>\n            <\/div>\n            \n            <!-- Step 6: Company Culture Questions (Optional) -->\n            <div class=\"form-section\">\n                <h3>\ud83c\udfaf Ideal Candidate Profile<\/h3>\n                <p class=\"section-description\">Help us match you with developers who share your values<\/p>\n                \n                <?php\n                $culture_preferences = $job ? get_post_meta($job->ID, 'culture_preferences', true) : array();\n                if (!is_array($culture_preferences)) $culture_preferences = array();\n                \n                $culture_questions = jobmatch_get_culture_questions();\n                foreach ($culture_questions as $question_id => $question_data):\n                ?>\n                    <div class=\"form-group culture-preference\">\n                        <label><?php echo esc_html($question_data['question']); ?><\/label>\n                        \n                        <?php if ($question_data['type'] === 'scale'): ?>\n                            <div class=\"scale-input\">\n                                <div class=\"scale-labels\">\n                                    <span><?php echo $question_data['labels'][1]; ?><\/span>\n                                    <span><?php echo $question_data['labels'][5]; ?><\/span>\n                                <\/div>\n                                <div class=\"scale-options\">\n                                    <?php for ($i = 1; $i <= 5; $i++): ?>\n                                        <label class=\"scale-option\">\n                                            <input type=\"radio\" name=\"culture_preferences[<?php echo $question_id; ?>]\" \n                                                   value=\"<?php echo $i; ?>\" \n                                                   <?php checked($culture_preferences[$question_id] ?? '', $i); ?>>\n                                            <span class=\"scale-number\"><?php echo $i; ?><\/span>\n                                        <\/label>\n                                    <?php endfor; ?>\n                                <\/div>\n                            <\/div>\n                        <?php else: ?>\n                            <div class=\"choice-options\">\n                                <?php foreach ($question_data['options'] as $value => $label): ?>\n                                    <label class=\"choice-option\">\n                                        <input type=\"radio\" name=\"culture_preferences[<?php echo $question_id; ?>]\" \n                                               value=\"<?php echo esc_attr($value); ?>\" \n                                               <?php checked($culture_preferences[$question_id] ?? '', $value); ?>>\n                                        <span class=\"choice-label\"><?php echo esc_html($label); ?><\/span>\n                                    <\/label>\n                                <?php endforeach; ?>\n                            <\/div>\n                        <?php endif; ?>\n                    <\/div>\n                <?php endforeach; ?>\n            <\/div>\n            \n            <!-- Preview & Submit -->\n            <div class=\"form-section form-actions\">\n                <div class=\"action-buttons\">\n                    <button type=\"button\" class=\"btn-secondary\" onclick=\"saveDraft()\">\n                        \ud83d\udcbe Save as Draft\n                    <\/button>\n                    <button type=\"button\" class=\"btn-preview\" onclick=\"previewJob()\">\n                        \ud83d\udc41\ufe0f Preview\n                    <\/button>\n                    <button type=\"submit\" name=\"publish_job\" class=\"btn-primary\">\n                        \ud83d\udce2 <?php echo $job_id ? 'Update Job' : 'Publish Job'; ?>\n                    <\/button>\n                <\/div>\n                \n                <?php if (!$job_id): ?>\n                <div class=\"credit-notice\">\n                    <p>\ud83d\udca1 <strong>Note:<\/strong> Publishing a job is free. Credits are only used when you match with developers.<\/p>\n                <\/div>\n                <?php endif; ?>\n            <\/div>\n        <\/form>\n        \n        <!-- Preview Modal -->\n        <div id=\"jobPreviewModal\" class=\"modal\" style=\"display:none;\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h2>Job Preview<\/h2>\n                    <button class=\"close-modal\" onclick=\"closePreview()\">&times;<\/button>\n                <\/div>\n                <div class=\"modal-body\" id=\"previewContent\">\n                    <!-- Preview content will be inserted here -->\n                <\/div>\n                <div class=\"modal-footer\">\n                    <button class=\"btn-secondary\" onclick=\"closePreview()\">Close<\/button>\n                    <button class=\"btn-primary\" onclick=\"document.getElementById('jobPostingForm').submit()\">\n                        Publish Job\n                    <\/button>\n                <\/div>\n            <\/div>\n        <\/div>\n    <\/div>\n    \n    <script>\n    \/\/ Dynamic form behavior\n    document.addEventListener('DOMContentLoaded', function() {\n        \/\/ Show\/hide location fields based on work arrangement\n        const workArrangement = document.querySelectorAll('input[name=\"work_arrangement\"]');\n        const locationGroup = document.getElementById('location-group');\n        \n        workArrangement.forEach(radio => {\n            radio.addEventListener('change', function() {\n                if (this.value === 'remote') {\n                    locationGroup.style.display = 'none';\n                } else {\n                    locationGroup.style.display = 'block';\n                    if (this.value === 'onsite' || this.value === 'hybrid') {\n                        document.getElementById('job_location').setAttribute('required', 'required');\n                    }\n                }\n            });\n        });\n        \n        \/\/ Validate tech stack selection (minimum 3)\n        const form = document.getElementById('jobPostingForm');\n        form.addEventListener('submit', function(e) {\n            const techCheckboxes = document.querySelectorAll('input[name=\"tech_stack[]\"]:checked');\n            if (techCheckboxes.length < 3) {\n                e.preventDefault();\n                alert('Please select at least 3 required technologies.');\n                return false;\n            }\n        });\n    });\n    \n    function saveDraft() {\n        const form = document.getElementById('jobPostingForm');\n        const input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = 'save_draft';\n        input.value = '1';\n        form.appendChild(input);\n        form.submit();\n    }\n    \n    function previewJob() {\n        \/\/ Gather form data\n        const formData = new FormData(document.getElementById('jobPostingForm'));\n        \n        \/\/ Build preview HTML\n        let previewHTML = '<div class=\"job-preview\">';\n        previewHTML += '<h1>' + formData.get('job_title') + '<\/h1>';\n        previewHTML += '<div class=\"job-meta\">';\n        previewHTML += '<span>\ud83d\udcbc ' + formData.get('work_type') + '<\/span>';\n        previewHTML += '<span>\ud83d\udccd ' + (formData.get('work_arrangement') === 'remote' ? 'Remote' : formData.get('job_location')) + '<\/span>';\n        previewHTML += '<span>\ud83d\udcb0 \u20ac' + formData.get('salary_min').replace(\/\\B(?=(\\d{3})+(?!\\d))\/g, ',');\n        if (formData.get('salary_max')) {\n            previewHTML += ' - \u20ac' + formData.get('salary_max').replace(\/\\B(?=(\\d{3})+(?!\\d))\/g, ',');\n        }\n        previewHTML += '<\/span>';\n        previewHTML += '<\/div>';\n        previewHTML += '<div class=\"job-description\">' + formData.get('job_description').replace(\/\\n\/g, '<br>') + '<\/div>';\n        \n        \/\/ Tech stack\n        const techStack = formData.getAll('tech_stack[]');\n        if (techStack.length) {\n            previewHTML += '<h3>Required Technologies<\/h3>';\n            previewHTML += '<div class=\"tech-tags\">';\n            techStack.forEach(tech => {\n                previewHTML += '<span class=\"tech-tag\">' + tech + '<\/span> ';\n            });\n            previewHTML += '<\/div>';\n        }\n        \n        \/\/ Benefits\n        const benefits = formData.getAll('benefits[]');\n        if (benefits.length) {\n            previewHTML += '<h3>Benefits<\/h3>';\n            previewHTML += '<ul>';\n            benefits.forEach(benefit => {\n                previewHTML += '<li>' + benefit.replace(\/_\/g, ' ') + '<\/li>';\n            });\n            previewHTML += '<\/ul>';\n        }\n        \n        previewHTML += '<\/div>';\n        \n        \/\/ Show preview\n        document.getElementById('previewContent').innerHTML = previewHTML;\n        document.getElementById('jobPreviewModal').style.display = 'flex';\n    }\n    \n    function closePreview() {\n        document.getElementById('jobPreviewModal').style.display = 'none';\n    }\n    <\/script>\n    \n    <?php\n    return ob_get_clean();\n}\n\n\/\/ Process job posting form submission\nfunction jobmatch_process_job_posting($data, $job_id = 0, $user_id) {\n    \/\/ Verify nonce\n    if (!wp_verify_nonce($data['job_posting_nonce'], 'job_posting')) {\n        return array('success' => false, 'message' => 'Security verification failed.');\n    }\n    \n    \/\/ Validate required fields\n    $required_fields = array('job_title', 'job_description', 'work_type', 'experience_level', 'salary_min', 'work_arrangement', 'requirements');\n    foreach ($required_fields as $field) {\n        if (empty($data[$field])) {\n            return array('success' => false, 'message' => 'Please fill in all required fields.');\n        }\n    }\n    \n    \/\/ Validate tech stack (minimum 3)\n    if (empty($data['tech_stack']) || count($data['tech_stack']) < 3) {\n        return array('success' => false, 'message' => 'Please select at least 3 required technologies.');\n    }\n    \n    \/\/ Validate location for non-remote positions\n    if ($data['work_arrangement'] !== 'remote' && empty($data['job_location'])) {\n        return array('success' => false, 'message' => 'Please specify the office location for non-remote positions.');\n    }\n    \n    \/\/ Determine post status\n    $post_status = isset($data['save_draft']) ? 'draft' : 'publish';\n    \n    \/\/ Prepare post data\n    $post_data = array(\n        'post_title' => sanitize_text_field($data['job_title']),\n        'post_content' => wp_kses_post($data['job_description']),\n        'post_type' => 'jobs',\n        'post_status' => $post_status,\n        'post_author' => $user_id\n    );\n    \n    \/\/ Update or create post\n    if ($job_id) {\n        $post_data['ID'] = $job_id;\n        $result = wp_update_post($post_data);\n    } else {\n        $result = wp_insert_post($post_data);\n    }\n    \n    if (!$result || is_wp_error($result)) {\n        return array('success' => false, 'message' => 'Failed to save job posting.');\n    }\n    \n    $job_id = $result;\n    \n    \/\/ Save meta data\n    update_post_meta($job_id, 'work_type', sanitize_text_field($data['work_type']));\n    update_post_meta($job_id, 'required_experience', sanitize_text_field($data['experience_level']));\n    update_post_meta($job_id, 'salary_min', intval($data['salary_min']));\n    update_post_meta($job_id, 'salary_max', intval($data['salary_max']));\n    update_post_meta($job_id, 'work_arrangement', sanitize_text_field($data['work_arrangement']));\n    update_post_meta($job_id, 'job_location', sanitize_text_field($data['job_location']));\n    update_post_meta($job_id, 'job_postal_code', sanitize_text_field($data['job_postal_code']));\n    update_post_meta($job_id, 'requirements', wp_kses_post($data['requirements']));\n    update_post_meta($job_id, 'nice_to_have', wp_kses_post($data['nice_to_have']));\n    update_post_meta($job_id, 'application_deadline', sanitize_text_field($data['application_deadline']));\n    \n    \/\/ Handle remote work flag\n    update_post_meta($job_id, 'remote_work', $data['work_arrangement'] === 'remote' ? true : false);\n    \n    \/\/ Save arrays\n    update_post_meta($job_id, 'benefits', array_map('sanitize_text_field', $data['benefits'] ?? array()));\n    update_post_meta($job_id, 'application_requirements', array_map('sanitize_text_field', $data['application_requirements'] ?? array()));\n    update_post_meta($job_id, 'culture_preferences', array_map('sanitize_text_field', $data['culture_preferences'] ?? array()));\n    \n    \/\/ Set tech stack taxonomy\n    wp_set_post_terms($job_id, $data['tech_stack'], 'tech_stack');\n    \n    \/\/ Set location taxonomy if provided\n    if (!empty($data['job_location'])) {\n        $location_term = sanitize_text_field($data['job_location']);\n        wp_set_post_terms($job_id, array($location_term), 'location_region');\n    }\n    \n    \/\/ Trigger match calculations for new published jobs\n    if ($post_status === 'publish' && !isset($data['job_action']) || $data['job_action'] === 'create') {\n        do_action('jobmatch_new_job_published', $job_id);\n    }\n    \n    \/\/ Determine redirect\n    if ($post_status === 'draft') {\n        $redirect = add_query_arg(array(\n            'job_id' => $job_id,\n            'message' => 'draft_saved'\n        ), home_url('\/post-job\/'));\n    } else {\n        $redirect = add_query_arg(array(\n            'view' => 'my-jobs',\n            'message' => 'job_published'\n        ), home_url('\/company-dashboard\/'));\n    }\n    \n    return array('success' => true, 'redirect' => $redirect);\n}\n\n\/\/ Add styles for job posting form\nadd_action('wp_enqueue_scripts', 'jobmatch_enqueue_job_posting_assets');\n\nfunction jobmatch_enqueue_job_posting_assets() {\n    if (is_page() && has_shortcode(get_post()->post_content, 'job_posting_form')) {\n        wp_enqueue_script('jquery');\n        wp_add_inline_style('wp-block-library', jobmatch_get_job_posting_styles());\n    }\n}\n\n\/\/ Job posting form CSS styles\nfunction jobmatch_get_job_posting_styles() {\n    return '\n    .job-posting-container {\n        max-width: 900px;\n        margin: 0 auto;\n        padding: 20px;\n    }\n    \n    .posting-header {\n        text-align: center;\n        margin-bottom: 40px;\n    }\n    \n    .posting-header h1 {\n        margin: 0 0 10px 0;\n        color: #333;\n        font-size: 2rem;\n    }\n    \n    .posting-header p {\n        color: #666;\n        font-size: 1.1rem;\n    }\n    \n    .alert {\n        padding: 15px 20px;\n        border-radius: 8px;\n        margin-bottom: 25px;\n    }\n    \n    .alert-error {\n        background: #f8d7da;\n        color: #721c24;\n        border: 1px solid #f5c6cb;\n    }\n    \n    .job-posting-form {\n        background: white;\n        border-radius: 20px;\n        box-shadow: 0 4px 20px rgba(0,0,0,0.1);\n    }\n    \n    .form-section {\n        padding: 30px;\n        border-bottom: 1px solid #e9ecef;\n    }\n    \n    .form-section:last-child {\n        border-bottom: none;\n    }\n    \n    .form-section h3 {\n        margin: 0 0 20px 0;\n        color: #333;\n        font-size: 1.3rem;\n    }\n    \n    .section-description {\n        color: #666;\n        font-size: 0.95rem;\n        margin: -15px 0 20px 0;\n    }\n    \n    .field-description {\n        color: #666;\n        font-size: 0.9rem;\n        margin: -5px 0 15px 0;\n    }\n    \n    .form-group {\n        margin-bottom: 25px;\n    }\n    \n    .form-group label {\n        display: block;\n        font-weight: 600;\n        margin-bottom: 8px;\n        color: #333;\n    }\n    \n    .form-group input[type=\"text\"],\n    .form-group input[type=\"number\"],\n    .form-group input[type=\"date\"],\n    .form-group select,\n    .form-group textarea {\n        width: 100%;\n        padding: 12px 16px;\n        border: 2px solid #e9ecef;\n        border-radius: 10px;\n        font-size: 1rem;\n        transition: border-color 0.3s ease;\n        font-family: inherit;\n    }\n    \n    .form-group input:focus,\n    .form-group select:focus,\n    .form-group textarea:focus {\n        outline: none;\n        border-color: #667eea;\n        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n    }\n    \n    .form-group small {\n        display: block;\n        color: #6c757d;\n        font-size: 0.85rem;\n        margin-top: 5px;\n    }\n    \n    .form-row {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 20px;\n    }\n    \n    .tech-stack-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        gap: 25px;\n        padding: 20px;\n        background: #f8f9fa;\n        border-radius: 10px;\n    }\n    \n    .tech-category h5 {\n        margin: 0 0 12px 0;\n        color: #333;\n        font-size: 1rem;\n        border-bottom: 2px solid #667eea;\n        padding-bottom: 5px;\n    }\n    \n    .tech-checkboxes {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n    }\n    \n    .tech-checkbox {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        cursor: pointer;\n        padding: 6px;\n        border-radius: 6px;\n        transition: background-color 0.2s ease;\n    }\n    \n    .tech-checkbox:hover {\n        background: rgba(102, 126, 234, 0.05);\n    }\n    \n    .tech-checkbox input[type=\"checkbox\"] {\n        width: auto;\n        margin: 0;\n        cursor: pointer;\n    }\n    \n    .tech-checkbox span {\n        font-size: 0.9rem;\n        color: #495057;\n    }\n    \n    .benefits-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n        gap: 15px;\n        padding: 20px;\n        background: #f8f9fa;\n        border-radius: 10px;\n    }\n    \n    .benefit-checkbox {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        cursor: pointer;\n        padding: 10px;\n        background: white;\n        border: 2px solid #e9ecef;\n        border-radius: 8px;\n        transition: all 0.3s ease;\n    }\n    \n    .benefit-checkbox:hover {\n        border-color: #667eea;\n        background: rgba(102, 126, 234, 0.05);\n    }\n    \n    .benefit-checkbox input[type=\"checkbox\"] {\n        width: auto;\n        margin: 0;\n    }\n    \n    .benefit-checkbox input[type=\"checkbox\"]:checked + span {\n        color: #667eea;\n        font-weight: 600;\n    }\n    \n    .radio-group {\n        display: flex;\n        flex-direction: column;\n        gap: 15px;\n    }\n    \n    .radio-option {\n        border: 2px solid #e9ecef;\n        border-radius: 12px;\n        padding: 20px;\n        cursor: pointer;\n        transition: all 0.3s ease;\n        display: block;\n    }\n    \n    .radio-option:hover {\n        border-color: #667eea;\n        background: #f8f9fa;\n    }\n    \n    .radio-option input[type=\"radio\"] {\n        display: none;\n    }\n    \n    .radio-option input[type=\"radio\"]:checked + .radio-content {\n        color: #667eea;\n    }\n    \n    .radio-option input[type=\"radio\"]:checked {\n        border-color: #667eea;\n        background: rgba(102, 126, 234, 0.05);\n    }\n    \n    .radio-content {\n        display: flex;\n        align-items: center;\n        gap: 15px;\n    }\n    \n    .radio-icon {\n        font-size: 2rem;\n        flex-shrink: 0;\n    }\n    \n    .radio-text strong {\n        display: block;\n        font-size: 1.1rem;\n        margin-bottom: 3px;\n    }\n    \n    .radio-text small {\n        color: #666;\n        font-size: 0.9rem;\n    }\n    \n    .checkbox-group {\n        display: flex;\n        flex-direction: column;\n        gap: 12px;\n        padding: 15px;\n        background: #f8f9fa;\n        border-radius: 10px;\n    }\n    \n    .checkbox-option {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        cursor: pointer;\n    }\n    \n    .checkbox-option input[type=\"checkbox\"] {\n        width: auto;\n        margin: 0;\n    }\n    \n    .culture-preference {\n        padding: 20px;\n        background: #f8f9fa;\n        border-radius: 10px;\n        margin-bottom: 20px;\n    }\n    \n    .culture-preference label {\n        font-size: 1.05rem;\n        margin-bottom: 15px;\n    }\n    \n    .scale-input {\n        text-align: center;\n    }\n    \n    .scale-labels {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 15px;\n        font-size: 0.9rem;\n        color: #666;\n    }\n    \n    .scale-options {\n        display: flex;\n        justify-content: center;\n        gap: 15px;\n    }\n    \n    .scale-option {\n        cursor: pointer;\n    }\n    \n    .scale-option input[type=\"radio\"] {\n        display: none;\n    }\n    \n    .scale-number {\n        display: block;\n        width: 40px;\n        height: 40px;\n        border: 2px solid #e9ecef;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-weight: bold;\n        transition: all 0.3s ease;\n    }\n    \n    .scale-option input[type=\"radio\"]:checked + .scale-number {\n        background: #667eea;\n        border-color: #667eea;\n        color: white;\n    }\n    \n    .choice-options {\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        gap: 12px;\n    }\n    \n    .choice-option {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        padding: 10px;\n        border: 2px solid #e9ecef;\n        border-radius: 8px;\n        cursor: pointer;\n        transition: all 0.3s ease;\n    }\n    \n    .choice-option:hover {\n        border-color: #667eea;\n        background: rgba(102, 126, 234, 0.05);\n    }\n    \n    .choice-option input[type=\"radio\"] {\n        width: auto;\n        margin: 0;\n    }\n    \n    .choice-option input[type=\"radio\"]:checked + .choice-label {\n        color: #667eea;\n        font-weight: 600;\n    }\n    \n    .form-actions {\n        padding: 30px;\n        background: #f8f9fa;\n        border-bottom-left-radius: 20px;\n        border-bottom-right-radius: 20px;\n    }\n    \n    .action-buttons {\n        display: flex;\n        gap: 15px;\n        justify-content: center;\n    }\n    \n    .btn-primary,\n    .btn-secondary,\n    .btn-preview {\n        padding: 14px 28px;\n        border: none;\n        border-radius: 25px;\n        font-weight: bold;\n        font-size: 1rem;\n        cursor: pointer;\n        transition: all 0.3s ease;\n    }\n    \n    .btn-primary {\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n    }\n    \n    .btn-primary:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);\n    }\n    \n    .btn-secondary {\n        background: #6c757d;\n        color: white;\n    }\n    \n    .btn-preview {\n        background: white;\n        color: #667eea;\n        border: 2px solid #667eea;\n    }\n    \n    .credit-notice {\n        margin-top: 20px;\n        padding: 15px;\n        background: linear-gradient(135deg, #e3f2fd, #f3e5f5);\n        border-radius: 10px;\n        text-align: center;\n    }\n    \n    .credit-notice p {\n        margin: 0;\n        color: #333;\n    }\n    \n    \/* Modal styles *\/\n    .modal {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background: rgba(0,0,0,0.7);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 1000;\n    }\n    \n    .modal-content {\n        background: white;\n        border-radius: 20px;\n        width: 90%;\n        max-width: 800px;\n        max-height: 80vh;\n        display: flex;\n        flex-direction: column;\n    }\n    \n    .modal-header {\n        padding: 25px;\n        border-bottom: 1px solid #e9ecef;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    \n    .modal-header h2 {\n        margin: 0;\n        color: #333;\n    }\n    \n    .close-modal {\n        background: none;\n        border: none;\n        font-size: 2rem;\n        cursor: pointer;\n        color: #666;\n    }\n    \n    .modal-body {\n        padding: 25px;\n        overflow-y: auto;\n        flex-grow: 1;\n    }\n    \n    .modal-footer {\n        padding: 20px;\n        border-top: 1px solid #e9ecef;\n        display: flex;\n        justify-content: flex-end;\n        gap: 15px;\n    }\n    \n    \/* Job preview styles *\/\n    .job-preview h1 {\n        margin: 0 0 15px 0;\n        color: #333;\n    }\n    \n    .job-preview .job-meta {\n        display: flex;\n        gap: 20px;\n        margin-bottom: 20px;\n        color: #666;\n    }\n    \n    .job-preview .job-description {\n        line-height: 1.6;\n        color: #444;\n        margin-bottom: 25px;\n    }\n    \n    .job-preview h3 {\n        margin: 25px 0 15px 0;\n        color: #333;\n    }\n    \n    .job-preview .tech-tags {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 10px;\n    }\n    \n    .job-preview .tech-tag {\n        background: #e9ecef;\n        padding: 5px 12px;\n        border-radius: 15px;\n        font-size: 0.9rem;\n        color: #495057;\n    }\n    \n    @media (max-width: 768px) {\n        .form-row {\n            grid-template-columns: 1fr;\n        }\n        \n        .tech-stack-grid,\n        .benefits-grid {\n            grid-template-columns: 1fr;\n        }\n        \n        .choice-options {\n            grid-template-columns: 1fr;\n        }\n        \n        .action-buttons {\n            flex-direction: column;\n        }\n        \n        .action-buttons button {\n            width: 100%;\n        }\n    }\n    ';\n}","active":true,"modified":"2025-09-24 16:11:17","revision":"1"}]}