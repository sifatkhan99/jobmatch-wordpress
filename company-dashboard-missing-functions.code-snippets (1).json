{"generator":"Code Snippets v3.7.0","date_created":"2025-09-26 10:48","snippets":[{"id":36,"name":"Company Dashboard Missing Functions","code":"\n\/**\n * Company Dashboard Missing Functions\n * Add this as a new Code Snippet to fix the company dashboard\n *\/\n\n\/\/ Fix for missing helper functions that might be causing the HTML output issue\n\n\/\/ Get display avatar function if missing\nif (!function_exists('jobmatch_get_display_avatar')) {\n    function jobmatch_get_display_avatar($user_id, $viewer_id = null, $size = 'medium') {\n        $profile = jobmatch_get_anonymous_profile($user_id, $viewer_id);\n        $classes = 'jobmatch-avatar ' . $size;\n        \n        if ($profile['type'] === 'developer') {\n            return '<span class=\"' . $classes . ' developer-avatar\">' . esc_html($profile['avatar']) . '<\/span>';\n        } else {\n            return '<span class=\"' . $classes . ' company-avatar\" style=\"background: ' . esc_attr($profile['industry_color']) . '\">' . esc_html($profile['industry_icon']) . '<\/span>';\n        }\n    }\n}\n\n\/\/ Get match stats if missing\nif (!function_exists('jobmatch_get_match_stats')) {\n    function jobmatch_get_match_stats($user_id) {\n        global $wpdb;\n        \n        $stats = array(\n            'total' => 0,\n            'mutual' => 0,\n            'pending' => 0,\n            'chatting' => 0\n        );\n        \n        \/\/ Query matches\n        $matches = $wpdb->get_results($wpdb->prepare(\"\n            SELECT pm_status.meta_value as status, COUNT(*) as count\n            FROM {$wpdb->posts} p\n            LEFT JOIN {$wpdb->postmeta} pm_status ON p.ID = pm_status.post_id AND pm_status.meta_key = 'match_status'\n            LEFT JOIN {$wpdb->postmeta} pm_comp ON p.ID = pm_comp.post_id AND pm_comp.meta_key = 'company_id'\n            WHERE p.post_type = 'matches'\n            AND p.post_status = 'publish'\n            AND pm_comp.meta_value = %s\n            GROUP BY pm_status.meta_value\n        \", $user_id));\n        \n        foreach ($matches as $match) {\n            if ($match->status === 'mutual' || $match->status === 'revealed') {\n                $stats['mutual'] += $match->count;\n            } elseif ($match->status === 'chatting') {\n                $stats['chatting'] += $match->count;\n            } else {\n                $stats['pending'] += $match->count;\n            }\n            $stats['total'] += $match->count;\n        }\n        \n        return $stats;\n    }\n}\n\n\/\/ Get credit balance if missing\nif (!function_exists('jobmatch_get_credit_balance')) {\n    function jobmatch_get_credit_balance($user_id) {\n        $balance = get_user_meta($user_id, 'credit_balance', true);\n        return intval($balance) ?: 0;\n    }\n}\n\n\/\/ Get unread messages count if missing\nif (!function_exists('jobmatch_get_unread_messages_count')) {\n    function jobmatch_get_unread_messages_count($user_id) {\n        global $wpdb;\n        \n        \/\/ Check messages post type\n        $count = $wpdb->get_var($wpdb->prepare(\"\n            SELECT COUNT(*) FROM {$wpdb->posts} p\n            LEFT JOIN {$wpdb->postmeta} pm ON p.ID = pm.post_id AND pm.meta_key = 'is_read'\n            LEFT JOIN {$wpdb->postmeta} pm_to ON p.ID = pm.post_id AND pm_to.meta_key = 'recipient_id'\n            WHERE p.post_type = 'messages'\n            AND pm_to.meta_value = %s\n            AND (pm.meta_value = '0' OR pm.meta_value IS NULL)\n        \", $user_id));\n        \n        return intval($count);\n    }\n}\n\n\/\/ Get user matches if missing\nif (!function_exists('jobmatch_get_user_matches')) {\n    function jobmatch_get_user_matches($user_id, $type = 'all', $limit = 10) {\n        global $wpdb;\n        \n        $matches = $wpdb->get_results($wpdb->prepare(\"\n            SELECT p.*, \n                   pm_dev.meta_value as developer_id,\n                   pm_comp.meta_value as company_id,\n                   pm_status.meta_value as match_status\n            FROM {$wpdb->posts} p\n            LEFT JOIN {$wpdb->postmeta} pm_dev ON p.ID = pm_dev.post_id AND pm_dev.meta_key = 'developer_id'\n            LEFT JOIN {$wpdb->postmeta} pm_comp ON p.ID = pm_comp.post_id AND pm_comp.meta_key = 'company_id'\n            LEFT JOIN {$wpdb->postmeta} pm_status ON p.ID = pm_status.post_id AND pm_status.meta_key = 'match_status'\n            WHERE p.post_type = 'matches'\n            AND p.post_status = 'publish'\n            AND (pm_comp.meta_value = %s OR pm_dev.meta_value = %s)\n            ORDER BY p.post_date DESC\n            LIMIT %d\n        \", $user_id, $user_id, $limit));\n        \n        return $matches;\n    }\n}\n\n\/\/ Get top matches if missing\nif (!function_exists('jobmatch_get_top_matches')) {\n    function jobmatch_get_top_matches($user_id, $target_type = 'developer', $limit = 5) {\n        global $wpdb;\n        \n        $table = $wpdb->prefix . 'match_scores';\n        \n        $results = $wpdb->get_results($wpdb->prepare(\"\n            SELECT * FROM $table\n            WHERE user_id = %d\n            AND target_type = %s\n            ORDER BY score DESC\n            LIMIT %d\n        \", $user_id, $target_type, $limit));\n        \n        return $results ?: array();\n    }\n}\n\n\/\/ Get user notifications if missing\nif (!function_exists('jobmatch_get_user_notifications')) {\n    function jobmatch_get_user_notifications($user_id, $limit = 10) {\n        global $wpdb;\n        \n        $table = $wpdb->prefix . 'jobmatch_notifications';\n        \n        if ($wpdb->get_var(\"SHOW TABLES LIKE '$table'\") != $table) {\n            return array();\n        }\n        \n        return $wpdb->get_results($wpdb->prepare(\"\n            SELECT * FROM $table\n            WHERE user_id = %d\n            ORDER BY created_at DESC\n            LIMIT %d\n        \", $user_id, $limit));\n    }\n}\n\n\/\/ Get match score if missing\nif (!function_exists('jobmatch_get_match_score')) {\n    function jobmatch_get_match_score($user_id, $target_id, $target_type) {\n        global $wpdb;\n        \n        $table = $wpdb->prefix . 'match_scores';\n        \n        return $wpdb->get_row($wpdb->prepare(\"\n            SELECT * FROM $table\n            WHERE user_id = %d\n            AND target_id = %d\n            AND target_type = %s\n        \", $user_id, $target_id, $target_type));\n    }\n}\n\n\/\/ Get score class for styling\nif (!function_exists('jobmatch_get_score_class')) {\n    function jobmatch_get_score_class($score) {\n        if ($score >= 80) return 'excellent';\n        if ($score >= 60) return 'good';\n        if ($score >= 40) return 'fair';\n        return 'low';\n    }\n}\n\n\/\/ Add inline styles for company dashboard\nif (!function_exists('jobmatch_get_company_dashboard_styles')) {\n    function jobmatch_get_company_dashboard_styles() {\n        return '\n        .company-dashboard {\n            max-width: 1400px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        .dashboard-header {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            padding: 30px;\n            border-radius: 15px;\n            margin-bottom: 30px;\n        }\n        .user-welcome {\n            display: flex;\n            align-items: center;\n            gap: 20px;\n            margin-bottom: 20px;\n        }\n        .welcome-text h1 {\n            margin: 0;\n            font-size: 2rem;\n        }\n        .dashboard-nav {\n            display: flex;\n            gap: 15px;\n            margin-bottom: 30px;\n            overflow-x: auto;\n            padding: 10px;\n            background: #f5f5f5;\n            border-radius: 10px;\n        }\n        .nav-item {\n            padding: 10px 20px;\n            border-radius: 8px;\n            text-decoration: none;\n            color: #333;\n            white-space: nowrap;\n            transition: all 0.3s;\n        }\n        .nav-item:hover {\n            background: #e0e0e0;\n        }\n        .nav-item.active {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n        }\n        .badge {\n            background: red;\n            color: white;\n            border-radius: 10px;\n            padding: 2px 6px;\n            font-size: 0.8rem;\n            margin-left: 5px;\n        }\n        .stats-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n            gap: 15px;\n        }\n        .stat-card {\n            background: rgba(255, 255, 255, 0.1);\n            padding: 15px;\n            border-radius: 10px;\n            text-align: center;\n        }\n        .stat-number {\n            font-size: 2rem;\n            font-weight: bold;\n        }\n        .stat-label {\n            font-size: 0.9rem;\n            opacity: 0.9;\n        }\n        .overview-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n            gap: 20px;\n        }\n        .overview-section {\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n        }\n        .developer-card {\n            background: white;\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n            margin-bottom: 15px;\n        }\n        .developer-header {\n            display: flex;\n            align-items: center;\n            gap: 15px;\n            margin-bottom: 15px;\n        }\n        .match-score {\n            margin-left: auto;\n            padding: 5px 10px;\n            border-radius: 20px;\n            color: white;\n            font-weight: bold;\n        }\n        .match-score.excellent {\n            background: linear-gradient(135deg, #11998e, #38ef7d);\n        }\n        .match-score.good {\n            background: linear-gradient(135deg, #667eea, #764ba2);\n        }\n        .match-score.fair {\n            background: linear-gradient(135deg, #f093fb, #f5576c);\n        }\n        .tech-tag {\n            display: inline-block;\n            padding: 3px 10px;\n            background: #e3f2fd;\n            color: #1976d2;\n            border-radius: 15px;\n            font-size: 0.85rem;\n            margin-right: 5px;\n            margin-bottom: 5px;\n        }\n        .btn-primary {\n            background: linear-gradient(135deg, #667eea, #764ba2);\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 8px;\n            cursor: pointer;\n            text-decoration: none;\n            display: inline-block;\n        }\n        .btn-like, .btn-pass, .btn-view {\n            padding: 8px 16px;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            margin-right: 10px;\n        }\n        .btn-like {\n            background: #ff6b6b;\n            color: white;\n        }\n        .btn-pass {\n            background: #868e96;\n            color: white;\n        }\n        .btn-view {\n            background: #339af0;\n            color: white;\n        }\n        .jobmatch-avatar {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-weight: bold;\n            color: white;\n        }\n        .jobmatch-avatar.small {\n            width: 30px;\n            height: 30px;\n            font-size: 14px;\n        }\n        .jobmatch-avatar.large {\n            width: 70px;\n            height: 70px;\n            font-size: 28px;\n        }\n        .developer-avatar {\n            background: linear-gradient(135deg, #667eea, #764ba2);\n        }\n        .company-avatar {\n            background: #4CAF50;\n        }\n        ';\n    }\n}\n\n\/\/ Ensure we have the nonce variable available\nadd_action('wp_footer', function() {\n    if (!is_user_logged_in()) return;\n    ?>\n    <script>\n    if (typeof jobmatch_nonce === 'undefined') {\n        var jobmatch_nonce = '<?php echo wp_create_nonce('jobmatch_nonce'); ?>';\n    }\n    if (typeof ajaxurl === 'undefined') {\n        var ajaxurl = '<?php echo admin_url('admin-ajax.php'); ?>';\n    }\n    <\/script>\n    <?php\n});","active":true,"modified":"2025-09-24 21:48:41","revision":"1"}]}