{"generator":"Code Snippets v3.7.0","date_created":"2025-09-26 10:48","snippets":[{"id":24,"name":"Geo-Location System (Connecting to Existing Architecture)","code":"\/\/ This connects to your existing database structure and functions\nadd_action('init', 'jobmatch_extend_geo_functionality');\n\nfunction jobmatch_extend_geo_functionality() {\n    \/\/ Hook into your existing profile save from onboarding\n    add_action('jobmatch_onboarding_complete', 'jobmatch_geocode_user_location');\n    \/\/ REMOVED profile_update from here since it's at the bottom\n}\n\nfunction jobmatch_geocode_user_location($user_id) {\n    $postal_code = get_user_meta($user_id, 'postal_code', true);\n    if (!$postal_code) return;\n    \n    \/\/ Check if already geocoded\n    $existing_coords = get_user_meta($user_id, 'lat_lng', true);\n    if ($existing_coords) return;\n    \n    \/\/ Store in your geo_locations table that already exists\n    global $wpdb;\n    $table = $wpdb->prefix . 'geo_locations';\n    \n    $existing = $wpdb->get_row($wpdb->prepare(\n        \"SELECT * FROM $table WHERE postal_code = %s\",\n        $postal_code\n    ));\n    \n    if ($existing) {\n        update_user_meta($user_id, 'lat_lng', $existing->latitude . ',' . $existing->longitude);\n    } else {\n        \/\/ Geocode and cache\n        $coords = jobmatch_geocode_postal($postal_code);\n        if ($coords) {\n            $wpdb->insert($table, array(\n                'postal_code' => $postal_code,\n                'latitude' => $coords['lat'],\n                'longitude' => $coords['lng'],\n                'country' => 'DE'\n            ));\n            update_user_meta($user_id, 'lat_lng', $coords['lat'] . ',' . $coords['lng']);\n        }\n    }\n}\n\n\/\/ Extend your existing jobmatch_calculate_match_score function\nadd_filter('jobmatch_score_factors', 'jobmatch_add_precise_location_scoring', 10, 3);\n\nfunction jobmatch_add_precise_location_scoring($factors, $user_id, $target_id) {\n    \/\/ This hooks into your existing scoring system\n    $user_coords = get_user_meta($user_id, 'lat_lng', true);\n    $target_coords = get_user_meta($target_id, 'lat_lng', true);\n    \n    if ($user_coords && $target_coords) {\n        list($u_lat, $u_lng) = explode(',', $user_coords);\n        list($t_lat, $t_lng) = explode(',', $target_coords);\n        \n        $distance = jobmatch_calculate_distance($u_lat, $u_lng, $t_lat, $t_lng);\n        \n        \/\/ Modify the existing location_proximity factor\n        if ($distance <= 10) $factors['location_proximity'] = 100;\n        elseif ($distance <= 30) $factors['location_proximity'] = 80;\n        elseif ($distance <= 50) $factors['location_proximity'] = 60;\n        elseif ($distance <= 100) $factors['location_proximity'] = 40;\n        else $factors['location_proximity'] = 20;\n    }\n    \n    return $factors;\n}\n\n\/\/ These hooks are at the root level to ensure they connect\nadd_action('profile_update', 'jobmatch_geocode_user_location');\nadd_action('user_register', 'jobmatch_geocode_user_location');","active":true,"modified":"2025-09-25 08:15:32","revision":"1"}]}