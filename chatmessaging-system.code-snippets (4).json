{"generator":"Code Snippets v3.7.0","date_created":"2025-09-26 10:47","snippets":[{"id":19,"name":"Chat\/Messaging System","code":"\n\/**\n * Chat and Messaging System\n * Add this to Code Snippets plugin\n *\/\n\n\/\/ Create chat room when mutual match occurs\nfunction jobmatch_create_chat_room($match_id, $developer_id, $company_id) {\n    \/\/ Create chat room post\n    $chat_room = array(\n        'post_title' => 'Chat Room: Match #' . $match_id,\n        'post_type' => 'chat_rooms',\n        'post_status' => 'private',\n        'post_author' => $developer_id,\n    );\n    \n    $chat_room_id = wp_insert_post($chat_room);\n    \n    if ($chat_room_id) {\n        \/\/ Link chat room to match\n        update_post_meta($match_id, 'chat_room_id', $chat_room_id);\n        update_post_meta($chat_room_id, 'match_id', $match_id);\n        update_post_meta($chat_room_id, 'developer_id', $developer_id);\n        update_post_meta($chat_room_id, 'company_id', $company_id);\n        update_post_meta($chat_room_id, 'last_message_time', current_time('mysql'));\n        \n        return $chat_room_id;\n    }\n    \n    return false;\n}\n\n\/\/ Register chat room post type\nadd_action('init', 'jobmatch_register_chat_post_types');\nfunction jobmatch_register_chat_post_types() {\n    register_post_type('chat_rooms', array(\n        'labels' => array(\n            'name' => 'Chat Rooms',\n            'singular_name' => 'Chat Room',\n        ),\n        'public' => false,\n        'show_ui' => true,\n        'show_in_menu' => true,\n        'supports' => array('title', 'custom-fields'),\n        'menu_icon' => 'dashicons-format-chat',\n        'capability_type' => 'post',\n    ));\n    \n    register_post_type('chat_messages', array(\n        'labels' => array(\n            'name' => 'Chat Messages',\n            'singular_name' => 'Message',\n        ),\n        'public' => false,\n        'show_ui' => true,\n        'supports' => array('editor', 'author', 'custom-fields'),\n        'menu_icon' => 'dashicons-email-alt',\n        'capability_type' => 'post',\n    ));\n}\n\n\/\/ Send message AJAX handler\nadd_action('wp_ajax_send_chat_message', 'jobmatch_send_chat_message');\nfunction jobmatch_send_chat_message() {\n    check_ajax_referer('jobmatch_nonce', 'nonce');\n    \n    $chat_room_id = intval($_POST['chat_room_id']);\n    $message_content = sanitize_textarea_field($_POST['message']);\n    $current_user_id = get_current_user_id();\n    \n    if (!$chat_room_id || !$message_content || !$current_user_id) {\n        wp_send_json_error('Invalid parameters');\n    }\n    \n    \/\/ Verify user can access this chat room\n    $developer_id = get_post_meta($chat_room_id, 'developer_id', true);\n    $company_id = get_post_meta($chat_room_id, 'company_id', true);\n    \n    if ($current_user_id != $developer_id && $current_user_id != $company_id) {\n        wp_send_json_error('Access denied');\n    }\n    \n    \/\/ Create message\n    $message_post = array(\n        'post_content' => $message_content,\n        'post_type' => 'chat_messages',\n        'post_status' => 'publish',\n        'post_author' => $current_user_id,\n        'post_parent' => $chat_room_id,\n    );\n    \n    $message_id = wp_insert_post($message_post);\n    \n    if ($message_id) {\n        \/\/ Update last message time\n        update_post_meta($chat_room_id, 'last_message_time', current_time('mysql'));\n        \n        \/\/ Send notification to other user\n        $other_user_id = ($current_user_id == $developer_id) ? $company_id : $developer_id;\n        $sender_name = jobmatch_get_display_name($current_user_id, $other_user_id);\n        \n        jobmatch_add_notification(\n            $other_user_id,\n            'new_message',\n            'New Message',\n            $sender_name . ' sent you a message.',\n            home_url('\/messages\/?room=' . $chat_room_id)\n        );\n        \n        wp_send_json_success(array(\n            'message_id' => $message_id,\n            'message' => array(\n                'id' => $message_id,\n                'content' => $message_content,\n                'sender_id' => $current_user_id,\n                'sender_name' => jobmatch_get_display_name($current_user_id, $other_user_id),\n                'timestamp' => current_time('mysql'),\n                'formatted_time' => human_time_diff(current_time('timestamp'))\n            )\n        ));\n    }\n    \n    wp_send_json_error('Failed to send message');\n}\n\n\/\/ Get chat messages AJAX handler\nadd_action('wp_ajax_get_chat_messages', 'jobmatch_get_chat_messages');\nfunction jobmatch_get_chat_messages() {\n    check_ajax_referer('jobmatch_nonce', 'nonce');\n    \n    $chat_room_id = intval($_POST['chat_room_id']);\n    $last_message_id = intval($_POST['last_message_id']) ?: 0;\n    $current_user_id = get_current_user_id();\n    \n    if (!$chat_room_id || !$current_user_id) {\n        wp_send_json_error('Invalid parameters');\n    }\n    \n    \/\/ Verify access\n    $developer_id = get_post_meta($chat_room_id, 'developer_id', true);\n    $company_id = get_post_meta($chat_room_id, 'company_id', true);\n    \n    if ($current_user_id != $developer_id && $current_user_id != $company_id) {\n        wp_send_json_error('Access denied');\n    }\n    \n    \/\/ Get messages\n    $args = array(\n        'post_type' => 'chat_messages',\n        'post_parent' => $chat_room_id,\n        'post_status' => 'publish',\n        'numberposts' => 50,\n        'orderby' => 'date',\n        'order' => 'ASC',\n    );\n    \n    if ($last_message_id > 0) {\n        $args['meta_query'] = array(\n            array(\n                'key' => 'ID',\n                'value' => $last_message_id,\n                'compare' => '>'\n            )\n        );\n    }\n    \n    $messages = get_posts($args);\n    $message_data = array();\n    $other_user_id = ($current_user_id == $developer_id) ? $company_id : $developer_id;\n    \n    foreach ($messages as $message) {\n        $message_data[] = array(\n            'id' => $message->ID,\n            'content' => $message->post_content,\n            'sender_id' => $message->post_author,\n            'sender_name' => jobmatch_get_display_name($message->post_author, $other_user_id),\n            'is_own' => ($message->post_author == $current_user_id),\n            'timestamp' => $message->post_date,\n            'formatted_time' => human_time_diff(strtotime($message->post_date)) . ' ago'\n        );\n    }\n    \n    wp_send_json_success($message_data);\n}\n\n\/\/ Chat interface shortcode\nadd_shortcode('jobmatch_chat', 'jobmatch_chat_shortcode');\nfunction jobmatch_chat_shortcode($atts) {\n    if (!is_user_logged_in()) {\n        return '<p>Please log in to access chat.<\/p>';\n    }\n    \n    $current_user_id = get_current_user_id();\n    $match_id = $_GET['match'] ?? 0;\n    $room_id = $_GET['room'] ?? 0;\n    \n    if ($match_id) {\n        \/\/ Find chat room by match\n        $room_id = get_post_meta($match_id, 'chat_room_id', true);\n        if (!$room_id) {\n            \/\/ Create chat room if it doesn't exist\n            $developer_id = get_post_meta($match_id, 'developer_id', true);\n            $company_id = get_post_meta($match_id, 'company_id', true);\n            $room_id = jobmatch_create_chat_room($match_id, $developer_id, $company_id);\n        }\n    }\n    \n    if (!$room_id) {\n        return '<p>Chat room not found.<\/p>';\n    }\n    \n    \/\/ Verify access\n    $developer_id = get_post_meta($room_id, 'developer_id', true);\n    $company_id = get_post_meta($room_id, 'company_id', true);\n    \n    if ($current_user_id != $developer_id && $current_user_id != $company_id) {\n        return '<p>Access denied.<\/p>';\n    }\n    \n    $other_user_id = ($current_user_id == $developer_id) ? $company_id : $developer_id;\n    $other_user_profile = jobmatch_get_anonymous_profile($other_user_id, $current_user_id);\n    \n    ob_start();\n    ?>\n    <div class=\"chat-interface\" data-room-id=\"<?php echo $room_id; ?>\">\n        <div class=\"chat-header\">\n            <div class=\"chat-user-info\">\n                <?php echo jobmatch_get_display_avatar($other_user_id, $current_user_id, 'small'); ?>\n                <div class=\"chat-user-details\">\n                    <h3><?php echo esc_html($other_user_profile['name']); ?><\/h3>\n                    <p class=\"user-status\">Online<\/p>\n                <\/div>\n            <\/div>\n            <button class=\"close-chat\" onclick=\"closeChatWindow()\">&times;<\/button>\n        <\/div>\n        \n        <div class=\"chat-messages\" id=\"chatMessages\">\n            <div class=\"loading-messages\">Loading messages...<\/div>\n        <\/div>\n        \n        <div class=\"chat-input-area\">\n            <form id=\"chatForm\" onsubmit=\"sendMessage(event)\">\n                <div class=\"input-group\">\n                    <textarea \n                        id=\"messageInput\" \n                        placeholder=\"Type your message...\" \n                        rows=\"1\"\n                        maxlength=\"1000\"\n                        onkeypress=\"handleEnterPress(event)\"><\/textarea>\n                    <button type=\"submit\" class=\"send-btn\" id=\"sendBtn\">\n                        <span class=\"send-icon\">\u27a4<\/span>\n                    <\/button>\n                <\/div>\n            <\/form>\n        <\/div>\n    <\/div>\n    \n    <script>\n    let chatRoomId = <?php echo $room_id; ?>;\n    let currentUserId = <?php echo $current_user_id; ?>;\n    let lastMessageId = 0;\n    let messagePolling;\n    \n    document.addEventListener('DOMContentLoaded', function() {\n        loadMessages();\n        startMessagePolling();\n        \n        \/\/ Auto-resize textarea\n        const messageInput = document.getElementById('messageInput');\n        messageInput.addEventListener('input', function() {\n            this.style.height = 'auto';\n            this.style.height = Math.min(this.scrollHeight, 100) + 'px';\n        });\n    });\n    \n    function loadMessages() {\n        jQuery.post('<?php echo admin_url('admin-ajax.php'); ?>', {\n            action: 'get_chat_messages',\n            chat_room_id: chatRoomId,\n            last_message_id: lastMessageId,\n            nonce: '<?php echo wp_create_nonce('jobmatch_nonce'); ?>'\n        }, function(response) {\n            if (response.success) {\n                displayMessages(response.data);\n                if (response.data.length > 0) {\n                    lastMessageId = response.data[response.data.length - 1].id;\n                }\n            }\n        });\n    }\n    \n    function displayMessages(messages) {\n        const messagesContainer = document.getElementById('chatMessages');\n        \n        if (messages.length === 0 && lastMessageId === 0) {\n            messagesContainer.innerHTML = '<div class=\"no-messages\">Start your conversation...<\/div>';\n            return;\n        }\n        \n        if (lastMessageId === 0) {\n            messagesContainer.innerHTML = '';\n        }\n        \n        messages.forEach(function(message) {\n            const messageElement = createMessageElement(message);\n            messagesContainer.appendChild(messageElement);\n        });\n        \n        scrollToBottom();\n    }\n    \n    function createMessageElement(message) {\n        const messageDiv = document.createElement('div');\n        messageDiv.className = 'chat-message ' + (message.is_own ? 'own-message' : 'other-message');\n        messageDiv.innerHTML = `\n            <div class=\"message-content\">\n                <p>${escapeHtml(message.content)}<\/p>\n                <span class=\"message-time\">${message.formatted_time}<\/span>\n            <\/div>\n        `;\n        return messageDiv;\n    }\n    \n    function sendMessage(event) {\n        event.preventDefault();\n        \n        const messageInput = document.getElementById('messageInput');\n        const message = messageInput.value.trim();\n        \n        if (!message) return;\n        \n        const sendBtn = document.getElementById('sendBtn');\n        sendBtn.disabled = true;\n        sendBtn.innerHTML = '<span class=\"loading\">...<\/span>';\n        \n        jQuery.post('<?php echo admin_url('admin-ajax.php'); ?>', {\n            action: 'send_chat_message',\n            chat_room_id: chatRoomId,\n            message: message,\n            nonce: '<?php echo wp_create_nonce('jobmatch_nonce'); ?>'\n        }, function(response) {\n            sendBtn.disabled = false;\n            sendBtn.innerHTML = '<span class=\"send-icon\">\u27a4<\/span>';\n            \n            if (response.success) {\n                messageInput.value = '';\n                messageInput.style.height = 'auto';\n                displayMessages([response.data.message]);\n                lastMessageId = response.data.message.id;\n            } else {\n                alert('Failed to send message: ' + response.data);\n            }\n        });\n    }\n    \n    function startMessagePolling() {\n        messagePolling = setInterval(function() {\n            loadMessages();\n        }, 3000); \/\/ Poll every 3 seconds\n    }\n    \n    function stopMessagePolling() {\n        if (messagePolling) {\n            clearInterval(messagePolling);\n        }\n    }\n    \n    function handleEnterPress(event) {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            sendMessage(event);\n        }\n    }\n    \n    function scrollToBottom() {\n        const messagesContainer = document.getElementById('chatMessages');\n        messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n    \n    function closeChatWindow() {\n        stopMessagePolling();\n        window.history.back();\n    }\n    \n    function escapeHtml(text) {\n        const div = document.createElement('div');\n        div.textContent = text;\n        return div.innerHTML;\n    }\n    \n    \/\/ Clean up on page unload\n    window.addEventListener('beforeunload', function() {\n        stopMessagePolling();\n    });\n    <\/script>\n    \n    <style>\n    .chat-interface {\n        max-width: 800px;\n        margin: 0 auto;\n        background: white;\n        border-radius: 15px;\n        box-shadow: 0 4px 20px rgba(0,0,0,0.1);\n        height: 600px;\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n    }\n    \n    .chat-header {\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n        padding: 20px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    \n    .chat-user-info {\n        display: flex;\n        align-items: center;\n        gap: 15px;\n    }\n    \n    .chat-user-details h3 {\n        margin: 0;\n        font-size: 1.1rem;\n    }\n    \n    .user-status {\n        margin: 0;\n        opacity: 0.8;\n        font-size: 0.85rem;\n    }\n    \n    .close-chat {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 1.5rem;\n        cursor: pointer;\n        width: 30px;\n        height: 30px;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    \n    .close-chat:hover {\n        background: rgba(255,255,255,0.1);\n    }\n    \n    .chat-messages {\n        flex: 1;\n        padding: 20px;\n        overflow-y: auto;\n        background: #f8f9fa;\n    }\n    \n    .chat-message {\n        margin-bottom: 15px;\n        display: flex;\n    }\n    \n    .chat-message.own-message {\n        justify-content: flex-end;\n    }\n    \n    .chat-message.other-message {\n        justify-content: flex-start;\n    }\n    \n    .message-content {\n        max-width: 70%;\n        padding: 12px 16px;\n        border-radius: 18px;\n        position: relative;\n    }\n    \n    .own-message .message-content {\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n    }\n    \n    .other-message .message-content {\n        background: white;\n        color: #333;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n    }\n    \n    .message-content p {\n        margin: 0;\n        line-height: 1.4;\n        word-wrap: break-word;\n    }\n    \n    .message-time {\n        font-size: 0.75rem;\n        opacity: 0.7;\n        display: block;\n        margin-top: 4px;\n    }\n    \n    .no-messages, .loading-messages {\n        text-align: center;\n        color: #666;\n        padding: 40px;\n        font-style: italic;\n    }\n    \n    .chat-input-area {\n        padding: 20px;\n        background: white;\n        border-top: 1px solid #e9ecef;\n    }\n    \n    .input-group {\n        display: flex;\n        gap: 12px;\n        align-items: flex-end;\n    }\n    \n    #messageInput {\n        flex: 1;\n        border: 2px solid #e9ecef;\n        border-radius: 20px;\n        padding: 12px 16px;\n        font-size: 1rem;\n        resize: none;\n        min-height: 44px;\n        max-height: 100px;\n        font-family: inherit;\n    }\n    \n    #messageInput:focus {\n        outline: none;\n        border-color: #667eea;\n    }\n    \n    .send-btn {\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n        border: none;\n        border-radius: 50%;\n        width: 44px;\n        height: 44px;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: transform 0.2s;\n    }\n    \n    .send-btn:hover {\n        transform: scale(1.05);\n    }\n    \n    .send-btn:disabled {\n        opacity: 0.6;\n        cursor: not-allowed;\n        transform: none;\n    }\n    \n    .send-icon {\n        font-size: 1.2rem;\n    }\n    \n    @media (max-width: 768px) {\n        .chat-interface {\n            height: 100vh;\n            border-radius: 0;\n            max-width: none;\n        }\n        \n        .message-content {\n            max-width: 85%;\n        }\n        \n        .chat-header {\n            padding: 15px;\n        }\n        \n        .chat-messages, .chat-input-area {\n            padding: 15px;\n        }\n    }\n    <\/style>\n    <?php\n    return ob_get_clean();\n}\n\n\/\/ Get user's chat rooms\nfunction jobmatch_get_user_chat_rooms($user_id) {\n    global $wpdb;\n    \n    $chat_rooms = $wpdb->get_results($wpdb->prepare(\"\n        SELECT cr.*, \n               COALESCE(m1.meta_value, m2.meta_value) as other_user_id,\n               m3.meta_value as last_message_time,\n               m4.meta_value as match_id\n        FROM {$wpdb->posts} cr\n        LEFT JOIN {$wpdb->postmeta} m1 ON cr.ID = m1.post_id AND m1.meta_key = 'developer_id' AND m1.meta_value != %s\n        LEFT JOIN {$wpdb->postmeta} m2 ON cr.ID = m2.post_id AND m2.meta_key = 'company_id' AND m2.meta_value != %s\n        LEFT JOIN {$wpdb->postmeta} m3 ON cr.ID = m3.post_id AND m3.meta_key = 'last_message_time'\n        LEFT JOIN {$wpdb->postmeta} m4 ON cr.ID = m4.post_id AND m4.meta_key = 'match_id'\n        WHERE cr.post_type = 'chat_rooms'\n        AND cr.post_status = 'private'\n        AND (cr.ID IN (\n            SELECT post_id FROM {$wpdb->postmeta} \n            WHERE meta_key IN ('developer_id', 'company_id') \n            AND meta_value = %s\n        ))\n        ORDER BY m3.meta_value DESC\n    \", $user_id, $user_id, $user_id));\n    \n    return $chat_rooms;\n}\n\n\/\/ Messages center shortcode for dashboard\nadd_shortcode('jobmatch_messages', 'jobmatch_messages_shortcode');\nfunction jobmatch_messages_shortcode($atts) {\n    if (!is_user_logged_in()) {\n        return '<p>Please log in to view messages.<\/p>';\n    }\n    \n    $current_user_id = get_current_user_id();\n    $chat_rooms = jobmatch_get_user_chat_rooms($current_user_id);\n    \n    ob_start();\n    ?>\n    <div class=\"messages-center\">\n        <h2>Your Conversations<\/h2>\n        \n        <?php if (!empty($chat_rooms)): ?>\n            <div class=\"chat-rooms-list\">\n                <?php foreach ($chat_rooms as $room): ?>\n                    <?php\n                    $other_user_id = $room->other_user_id;\n                    $other_profile = jobmatch_get_anonymous_profile($other_user_id, $current_user_id);\n                    $last_message_time = $room->last_message_time;\n                    ?>\n                    <div class=\"chat-room-item\" onclick=\"openChatRoom(<?php echo $room->ID; ?>)\">\n                        <div class=\"room-avatar\">\n                            <?php echo jobmatch_get_display_avatar($other_user_id, $current_user_id, 'medium'); ?>\n                        <\/div>\n                        <div class=\"room-info\">\n                            <h4><?php echo esc_html($other_profile['name']); ?><\/h4>\n                            <p class=\"last-activity\">\n                                <?php echo $last_message_time ? \n                                    'Last message: ' . human_time_diff(strtotime($last_message_time)) . ' ago' : \n                                    'No messages yet'; ?>\n                            <\/p>\n                        <\/div>\n                        <div class=\"room-arrow\">\u2192<\/div>\n                    <\/div>\n                <?php endforeach; ?>\n            <\/div>\n        <?php else: ?>\n            <div class=\"no-conversations\">\n                <h3>No conversations yet<\/h3>\n                <p>When you get mutual matches, you'll be able to chat here!<\/p>\n                <a href=\"<?php echo home_url('\/browse-jobs\/'); ?>\" class=\"btn-browse\">Start Browsing<\/a>\n            <\/div>\n        <?php endif; ?>\n    <\/div>\n    \n    <script>\n    function openChatRoom(roomId) {\n        window.location.href = '<?php echo home_url('\/chat\/'); ?>?room=' + roomId;\n    }\n    <\/script>\n    \n    <style>\n    .messages-center {\n        max-width: 800px;\n        margin: 0 auto;\n        padding: 20px;\n    }\n    \n    .chat-rooms-list {\n        background: white;\n        border-radius: 15px;\n        box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n        overflow: hidden;\n    }\n    \n    .chat-room-item {\n        display: flex;\n        align-items: center;\n        padding: 20px;\n        border-bottom: 1px solid #f1f1f1;\n        cursor: pointer;\n        transition: background-color 0.3s;\n    }\n    \n    .chat-room-item:last-child {\n        border-bottom: none;\n    }\n    \n    .chat-room-item:hover {\n        background: #f8f9fa;\n    }\n    \n    .room-avatar {\n        margin-right: 15px;\n    }\n    \n    .room-info {\n        flex: 1;\n    }\n    \n    .room-info h4 {\n        margin: 0 0 5px 0;\n        color: #333;\n    }\n    \n    .last-activity {\n        margin: 0;\n        color: #666;\n        font-size: 0.9rem;\n    }\n    \n    .room-arrow {\n        color: #667eea;\n        font-size: 1.2rem;\n    }\n    \n    .no-conversations {\n        text-align: center;\n        padding: 60px 20px;\n        background: white;\n        border-radius: 15px;\n        box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n    }\n    \n    .btn-browse {\n        display: inline-block;\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n        padding: 12px 24px;\n        border-radius: 25px;\n        text-decoration: none;\n        font-weight: bold;\n        margin-top: 20px;\n    }\n    <\/style>\n    <?php\n    return ob_get_clean();\n}\n\n\/\/ Hook to create chat room on mutual match\nadd_action('jobmatch_mutual_match_created', 'jobmatch_auto_create_chat_room', 10, 3);\nfunction jobmatch_auto_create_chat_room($match_id, $developer_id, $company_id) {\n    jobmatch_create_chat_room($match_id, $developer_id, $company_id);\n}\n","active":true,"modified":"2025-09-24 16:29:52","revision":"1"}]}