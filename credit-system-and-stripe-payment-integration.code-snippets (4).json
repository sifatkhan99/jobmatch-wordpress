{"generator":"Code Snippets v3.7.0","date_created":"2025-09-26 10:47","snippets":[{"id":17,"name":"Credit System and Stripe Payment Integration","code":"\n\/**\n * Credit System and Stripe Payment Integration\n * Add this to Code Snippets plugin\n * Requires Stripe PHP library - install via composer or manually\n *\/\n\n\/\/ Initialize Stripe settings\nadd_action('init', 'jobmatch_init_stripe_settings');\n\nfunction jobmatch_init_stripe_settings() {\n    \/\/ Add your Stripe keys here or in wp-config.php\n    if (!defined('JOBMATCH_STRIPE_PUBLIC_KEY')) {\n        define('JOBMATCH_STRIPE_PUBLIC_KEY', get_option('jobmatch_stripe_public_key', ''));\n    }\n    if (!defined('JOBMATCH_STRIPE_SECRET_KEY')) {\n        define('JOBMATCH_STRIPE_SECRET_KEY', get_option('jobmatch_stripe_secret_key', ''));\n    }\n    if (!defined('JOBMATCH_STRIPE_WEBHOOK_SECRET')) {\n        define('JOBMATCH_STRIPE_WEBHOOK_SECRET', get_option('jobmatch_stripe_webhook_secret', ''));\n    }\n}\n\n\/\/ Credit packages configuration\nfunction jobmatch_get_credit_packages() {\n    return array(\n        'starter' => array(\n            'credits' => 10,\n            'price' => 29,\n            'currency' => 'eur',\n            'name' => 'Starter Package',\n            'description' => '10 credits for revealing developer contacts',\n            'stripe_price_id' => get_option('jobmatch_stripe_starter_price_id', ''),\n            'popular' => false\n        ),\n        'growth' => array(\n            'credits' => 25,\n            'price' => 59,\n            'currency' => 'eur',\n            'name' => 'Growth Package',\n            'description' => '25 credits - Most popular choice',\n            'stripe_price_id' => get_option('jobmatch_stripe_growth_price_id', ''),\n            'popular' => true,\n            'savings' => '\u20ac12'\n        ),\n        'professional' => array(\n            'credits' => 50,\n            'price' => 99,\n            'currency' => 'eur',\n            'name' => 'Professional Package',\n            'description' => '50 credits - Best value',\n            'stripe_price_id' => get_option('jobmatch_stripe_professional_price_id', ''),\n            'popular' => false,\n            'savings' => '\u20ac46'\n        ),\n        'enterprise' => array(\n            'credits' => 100,\n            'price' => 179,\n            'currency' => 'eur',\n            'name' => 'Enterprise Package',\n            'description' => '100 credits for high-volume recruiting',\n            'stripe_price_id' => get_option('jobmatch_stripe_enterprise_price_id', ''),\n            'popular' => false,\n            'savings' => '\u20ac111'\n        )\n    );\n}\n\n\/\/ Create Stripe checkout session\nadd_action('wp_ajax_create_stripe_checkout', 'jobmatch_create_stripe_checkout');\n\nfunction jobmatch_create_stripe_checkout() {\n    check_ajax_referer('jobmatch_nonce', 'nonce');\n    \n    $user_id = get_current_user_id();\n    if (!$user_id) {\n        wp_send_json_error('Not logged in');\n    }\n    \n    $user_role = get_user_meta($user_id, 'user_role', true);\n    if ($user_role !== 'company') {\n        wp_send_json_error('Only companies can purchase credits');\n    }\n    \n    $package_id = sanitize_text_field($_POST['package_id']);\n    $packages = jobmatch_get_credit_packages();\n    \n    if (!isset($packages[$package_id])) {\n        wp_send_json_error('Invalid package');\n    }\n    \n    $package = $packages[$package_id];\n    \n    \/\/ Initialize Stripe\n    require_once(ABSPATH . 'wp-content\/stripe-php\/init.php'); \/\/ Adjust path as needed\n    \\Stripe\\Stripe::setApiKey(JOBMATCH_STRIPE_SECRET_KEY);\n    \n    try {\n        \/\/ Create checkout session\n        $session = \\Stripe\\Checkout\\Session::create([\n            'payment_method_types' => ['card'],\n            'line_items' => [[\n                'price_data' => [\n                    'currency' => $package['currency'],\n                    'product_data' => [\n                        'name' => $package['name'],\n                        'description' => $package['description'],\n                    ],\n                    'unit_amount' => $package['price'] * 100, \/\/ Convert to cents\n                ],\n                'quantity' => 1,\n            ]],\n            'mode' => 'payment',\n            'success_url' => home_url('\/company-dashboard\/?view=wallet&payment=success&session_id={CHECKOUT_SESSION_ID}'),\n            'cancel_url' => home_url('\/company-dashboard\/?view=wallet&payment=cancelled'),\n            'customer_email' => wp_get_current_user()->user_email,\n            'metadata' => [\n                'user_id' => $user_id,\n                'package_id' => $package_id,\n                'credits' => $package['credits']\n            ]\n        ]);\n        \n        \/\/ Store pending transaction\n        jobmatch_create_pending_transaction($user_id, $session->id, $package);\n        \n        wp_send_json_success(array(\n            'checkout_url' => $session->url,\n            'session_id' => $session->id\n        ));\n        \n    } catch (\\Stripe\\Exception\\ApiErrorException $e) {\n        wp_send_json_error('Payment error: ' . $e->getMessage());\n    }\n}\n\n\/\/ Create pending transaction record\nfunction jobmatch_create_pending_transaction($user_id, $session_id, $package) {\n    global $wpdb;\n    \n    $table_name = $wpdb->prefix . 'credit_transactions';\n    \n    $wpdb->insert($table_name, array(\n        'user_id' => $user_id,\n        'transaction_type' => 'pending',\n        'amount' => $package['credits'],\n        'balance_before' => jobmatch_get_credit_balance($user_id),\n        'balance_after' => jobmatch_get_credit_balance($user_id), \/\/ Will update after payment\n        'description' => 'Pending: ' . $package['name'],\n        'stripe_payment_id' => $session_id,\n        'created_at' => current_time('mysql')\n    ));\n    \n    return $wpdb->insert_id;\n}\n\n\/\/ Handle Stripe webhook\nadd_action('rest_api_init', 'jobmatch_register_stripe_webhook');\n\nfunction jobmatch_register_stripe_webhook() {\n    register_rest_route('jobmatch\/v1', '\/stripe-webhook', array(\n        'methods' => 'POST',\n        'callback' => 'jobmatch_handle_stripe_webhook',\n        'permission_callback' => '__return_true'\n    ));\n}\n\nfunction jobmatch_handle_stripe_webhook($request) {\n    $payload = $request->get_body();\n    $sig_header = $_SERVER['HTTP_STRIPE_SIGNATURE'];\n    $event = null;\n    \n    require_once(ABSPATH . 'wp-content\/stripe-php\/init.php');\n    \\Stripe\\Stripe::setApiKey(JOBMATCH_STRIPE_SECRET_KEY);\n    \n    try {\n        $event = \\Stripe\\Webhook::constructEvent(\n            $payload,\n            $sig_header,\n            JOBMATCH_STRIPE_WEBHOOK_SECRET\n        );\n    } catch(\\UnexpectedValueException $e) {\n        return new WP_Error('invalid_payload', 'Invalid payload', array('status' => 400));\n    } catch(\\Stripe\\Exception\\SignatureVerificationException $e) {\n        return new WP_Error('invalid_signature', 'Invalid signature', array('status' => 400));\n    }\n    \n    \/\/ Handle the event\n    switch ($event->type) {\n        case 'checkout.session.completed':\n            $session = $event->data->object;\n            jobmatch_process_successful_payment($session);\n            break;\n            \n        case 'checkout.session.expired':\n        case 'checkout.session.async_payment_failed':\n            $session = $event->data->object;\n            jobmatch_process_failed_payment($session);\n            break;\n    }\n    \n    return new WP_REST_Response(array('status' => 'success'), 200);\n}\n\n\/\/ Process successful payment\nfunction jobmatch_process_successful_payment($session) {\n    global $wpdb;\n    \n    $user_id = $session->metadata->user_id;\n    $credits = $session->metadata->credits;\n    $package_id = $session->metadata->package_id;\n    \n    \/\/ Get package details\n    $packages = jobmatch_get_credit_packages();\n    $package = $packages[$package_id];\n    \n    \/\/ Check if already processed\n    $existing = $wpdb->get_row($wpdb->prepare(\n        \"SELECT * FROM {$wpdb->prefix}credit_transactions \n        WHERE stripe_payment_id = %s AND transaction_type = 'purchase'\",\n        $session->id\n    ));\n    \n    if ($existing) {\n        return; \/\/ Already processed\n    }\n    \n    \/\/ Add credits to user\n    $current_balance = jobmatch_get_credit_balance($user_id);\n    $new_balance = $current_balance + $credits;\n    \n    \/\/ Record transaction\n    $transaction_id = jobmatch_add_credit_transaction(\n        $user_id,\n        'purchase',\n        $credits,\n        'Purchased ' . $package['name'],\n        null,\n        'credit_package',\n        $session->id\n    );\n    \n    \/\/ Send confirmation email\n    jobmatch_send_payment_confirmation($user_id, $package, $session);\n    \n    \/\/ Add notification\n    jobmatch_add_notification(\n        $user_id,\n        'credits_added',\n        '\ud83d\udcb0 Credits Added!',\n        $credits . ' credits have been added to your account.',\n        home_url('\/company-dashboard\/?view=wallet')\n    );\n    \n    \/\/ Update pending transaction\n    $wpdb->update(\n        $wpdb->prefix . 'credit_transactions',\n        array('transaction_type' => 'purchase'),\n        array('stripe_payment_id' => $session->id, 'transaction_type' => 'pending')\n    );\n}\n\n\/\/ Process failed payment\nfunction jobmatch_process_failed_payment($session) {\n    global $wpdb;\n    \n    \/\/ Update pending transaction\n    $wpdb->update(\n        $wpdb->prefix . 'credit_transactions',\n        array('transaction_type' => 'failed'),\n        array('stripe_payment_id' => $session->id, 'transaction_type' => 'pending')\n    );\n}\n\n\/\/ Send payment confirmation email\nfunction jobmatch_send_payment_confirmation($user_id, $package, $session) {\n    $user = get_userdata($user_id);\n    $company_name = get_user_meta($user_id, 'real_company_name', true);\n    \n    $subject = 'Payment Confirmation - ' . $package['name'];\n    \n    $message = \"Dear \" . $company_name . \",\\n\\n\";\n    $message .= \"Thank you for your purchase!\\n\\n\";\n    $message .= \"Order Details:\\n\";\n    $message .= \"Package: \" . $package['name'] . \"\\n\";\n    $message .= \"Credits: \" . $package['credits'] . \"\\n\";\n    $message .= \"Amount: \u20ac\" . $package['price'] . \"\\n\";\n    $message .= \"Transaction ID: \" . $session->id . \"\\n\\n\";\n    $message .= \"Your credits have been added to your account and are ready to use.\\n\\n\";\n    $message .= \"You can view your credit balance and transaction history at:\\n\";\n    $message .= home_url('\/company-dashboard\/?view=wallet') . \"\\n\\n\";\n    $message .= \"Best regards,\\n\";\n    $message .= get_bloginfo('name');\n    \n    wp_mail($user->user_email, $subject, $message);\n}\n\n\/\/ Credit usage functions\nfunction jobmatch_use_credit($user_id, $amount = 1, $description = '', $reference_id = null, $reference_type = null) {\n    $current_balance = jobmatch_get_credit_balance($user_id);\n    \n    if ($current_balance < $amount) {\n        return false; \/\/ Insufficient credits\n    }\n    \n    \/\/ Deduct credit\n    $transaction_id = jobmatch_add_credit_transaction(\n        $user_id,\n        'deduction',\n        -$amount,\n        $description,\n        $reference_id,\n        $reference_type\n    );\n    \n    \/\/ Check if low balance\n    $new_balance = $current_balance - $amount;\n    if ($new_balance < 5 && $new_balance > 0) {\n        jobmatch_add_notification(\n            $user_id,\n            'low_credits',\n            '\u26a0\ufe0f Low Credit Balance',\n            'You have only ' . $new_balance . ' credits remaining. Consider purchasing more.',\n            home_url('\/company-dashboard\/?view=wallet')\n        );\n    }\n    \n    return $transaction_id;\n}\n\n\/\/ Check credit before action\nfunction jobmatch_check_credit_before_match($user_id, $action = 'view') {\n    $required_credits = 1; \/\/ 1 credit per match reveal\n    $current_balance = jobmatch_get_credit_balance($user_id);\n    \n    if ($current_balance < $required_credits) {\n        return array(\n            'has_credits' => false,\n            'current_balance' => $current_balance,\n            'required' => $required_credits,\n            'message' => 'Insufficient credits. You need ' . $required_credits . ' credit(s) to reveal this match.'\n        );\n    }\n    \n    return array(\n        'has_credits' => true,\n        'current_balance' => $current_balance,\n        'required' => $required_credits\n    );\n}\n\n\/\/ Credit purchase page shortcode\nadd_shortcode('jobmatch_buy_credits', 'jobmatch_buy_credits_page');\n\nfunction jobmatch_buy_credits_page($atts) {\n    if (!is_user_logged_in()) {\n        return '<p>Please <a href=\"' . wp_login_url() . '\">log in<\/a> to purchase credits.<\/p>';\n    }\n    \n    $user_id = get_current_user_id();\n    $user_role = get_user_meta($user_id, 'user_role', true);\n    \n    if ($user_role !== 'company') {\n        return '<p>Only companies can purchase credits.<\/p>';\n    }\n    \n    $packages = jobmatch_get_credit_packages();\n    $current_balance = jobmatch_get_credit_balance($user_id);\n    \n    \/\/ Check for payment status\n    $payment_status = $_GET['payment'] ?? '';\n    \n    ob_start();\n    ?>\n    \n    <div class=\"buy-credits-container\">\n        <?php if ($payment_status === 'success'): ?>\n            <div class=\"alert alert-success\">\n                <h3>\u2705 Payment Successful!<\/h3>\n                <p>Your credits have been added to your account.<\/p>\n                <a href=\"<?php echo home_url('\/company-dashboard\/?view=wallet'); ?>\" class=\"btn-view-balance\">View Balance<\/a>\n            <\/div>\n        <?php elseif ($payment_status === 'cancelled'): ?>\n            <div class=\"alert alert-warning\">\n                <h3>\u26a0\ufe0f Payment Cancelled<\/h3>\n                <p>Your payment was cancelled. No charges were made.<\/p>\n            <\/div>\n        <?php endif; ?>\n        \n        <div class=\"credits-header\">\n            <h1>\ud83d\udcb0 Buy Credits<\/h1>\n            <div class=\"current-balance-display\">\n                <span class=\"balance-label\">Current Balance:<\/span>\n                <span class=\"balance-amount\"><?php echo $current_balance; ?> credits<\/span>\n            <\/div>\n        <\/div>\n        \n        <div class=\"credits-info\">\n            <p>Credits are used to reveal developer contact information when you have a mutual match.<\/p>\n            <p><strong>1 credit = 1 match reveal<\/strong><\/p>\n        <\/div>\n        \n        <div class=\"packages-grid\">\n            <?php foreach ($packages as $package_id => $package): ?>\n                <div class=\"package-card <?php echo $package['popular'] ? 'popular' : ''; ?>\">\n                    <?php if ($package['popular']): ?>\n                        <div class=\"popular-badge\">\ud83d\udd25 Most Popular<\/div>\n                    <?php endif; ?>\n                    \n                    <div class=\"package-header\">\n                        <h3><?php echo $package['name']; ?><\/h3>\n                        <div class=\"package-price\">\n                            <span class=\"currency\">\u20ac<\/span>\n                            <span class=\"amount\"><?php echo $package['price']; ?><\/span>\n                        <\/div>\n                    <\/div>\n                    \n                    <div class=\"package-details\">\n                        <div class=\"credits-amount\">\n                            <span class=\"number\"><?php echo $package['credits']; ?><\/span>\n                            <span class=\"text\">Credits<\/span>\n                        <\/div>\n                        \n                        <div class=\"price-per-credit\">\n                            \u20ac<?php echo number_format($package['price'] \/ $package['credits'], 2); ?> per credit\n                        <\/div>\n                        \n                        <?php if (isset($package['savings'])): ?>\n                            <div class=\"savings\">Save <?php echo $package['savings']; ?><\/div>\n                        <?php endif; ?>\n                        \n                        <ul class=\"package-features\">\n                            <li>\u2713 Instant activation<\/li>\n                            <li>\u2713 Never expire<\/li>\n                            <li>\u2713 Secure payment<\/li>\n                            <li>\u2713 Invoice included<\/li>\n                        <\/ul>\n                    <\/div>\n                    \n                    <button class=\"btn-buy-package\" onclick=\"purchasePackage('<?php echo $package_id; ?>')\">\n                        Choose Package\n                    <\/button>\n                <\/div>\n            <?php endforeach; ?>\n        <\/div>\n        \n        <div class=\"payment-security\">\n            <h3>\ud83d\udd12 Secure Payment<\/h3>\n            <div class=\"security-badges\">\n                <img src=\"<?php echo home_url('\/wp-content\/themes\/your-theme\/images\/stripe-badge.png'); ?>\" alt=\"Powered by Stripe\">\n                <span>SSL Encrypted<\/span>\n                <span>PCI Compliant<\/span>\n            <\/div>\n            <p>Your payment information is processed securely by Stripe. We never store your card details.<\/p>\n        <\/div>\n        \n        <div class=\"credits-faq\">\n            <h3>Frequently Asked Questions<\/h3>\n            \n            <div class=\"faq-item\">\n                <h4>What are credits used for?<\/h4>\n                <p>Credits are used to reveal developer contact information when you have a mutual match. Each reveal costs 1 credit.<\/p>\n            <\/div>\n            \n            <div class=\"faq-item\">\n                <h4>Do credits expire?<\/h4>\n                <p>No, credits never expire. Use them whenever you need them.<\/p>\n            <\/div>\n            \n            <div class=\"faq-item\">\n                <h4>Can I get a refund?<\/h4>\n                <p>Unused credits can be refunded within 14 days of purchase. Please contact support.<\/p>\n            <\/div>\n            \n            <div class=\"faq-item\">\n                <h4>Do you offer subscriptions?<\/h4>\n                <p>Currently we offer one-time credit packages. Subscription plans are coming soon!<\/p>\n            <\/div>\n        <\/div>\n    <\/div>\n    \n    <script>\n    function purchasePackage(packageId) {\n        \/\/ Show loading\n        const button = event.target;\n        const originalText = button.textContent;\n        button.textContent = 'Processing...';\n        button.disabled = true;\n        \n        jQuery.post('<?php echo admin_url('admin-ajax.php'); ?>', {\n            action: 'create_stripe_checkout',\n            package_id: packageId,\n            nonce: '<?php echo wp_create_nonce('jobmatch_nonce'); ?>'\n        }, function(response) {\n            if (response.success) {\n                \/\/ Redirect to Stripe checkout\n                window.location.href = response.data.checkout_url;\n            } else {\n                alert('Error: ' + response.data);\n                button.textContent = originalText;\n                button.disabled = false;\n            }\n        });\n    }\n    <\/script>\n    \n    <?php\n    return ob_get_clean();\n}\n\n\/\/ Add credit system styles\nadd_action('wp_head', 'jobmatch_credit_system_styles');\n\nfunction jobmatch_credit_system_styles() {\n    ?>\n    <style>\n    .buy-credits-container {\n        max-width: 1200px;\n        margin: 0 auto;\n        padding: 20px;\n    }\n    \n    .alert {\n        padding: 20px;\n        border-radius: 10px;\n        margin-bottom: 30px;\n    }\n    \n    .alert-success {\n        background: #d4edda;\n        color: #155724;\n        border: 1px solid #c3e6cb;\n    }\n    \n    .alert-warning {\n        background: #fff3cd;\n        color: #856404;\n        border: 1px solid #ffeaa7;\n    }\n    \n    .credits-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 30px;\n    }\n    \n    .credits-header h1 {\n        margin: 0;\n        color: #333;\n    }\n    \n    .current-balance-display {\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n        padding: 15px 25px;\n        border-radius: 25px;\n    }\n    \n    .balance-label {\n        margin-right: 10px;\n        opacity: 0.9;\n    }\n    \n    .balance-amount {\n        font-size: 1.3rem;\n        font-weight: bold;\n    }\n    \n    .credits-info {\n        background: #f8f9fa;\n        padding: 20px;\n        border-radius: 10px;\n        margin-bottom: 40px;\n        text-align: center;\n    }\n    \n    .packages-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n        gap: 30px;\n        margin-bottom: 50px;\n    }\n    \n    .package-card {\n        background: white;\n        border: 2px solid #e9ecef;\n        border-radius: 20px;\n        padding: 30px;\n        text-align: center;\n        position: relative;\n        transition: all 0.3s ease;\n    }\n    \n    .package-card:hover {\n        transform: translateY(-5px);\n        box-shadow: 0 10px 30px rgba(0,0,0,0.1);\n    }\n    \n    .package-card.popular {\n        border-color: #667eea;\n        transform: scale(1.05);\n    }\n    \n    .popular-badge {\n        position: absolute;\n        top: -12px;\n        left: 50%;\n        transform: translateX(-50%);\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n        padding: 5px 20px;\n        border-radius: 20px;\n        font-size: 0.85rem;\n        font-weight: bold;\n    }\n    \n    .package-header h3 {\n        margin: 0 0 20px 0;\n        color: #333;\n    }\n    \n    .package-price {\n        margin-bottom: 20px;\n    }\n    \n    .package-price .currency {\n        font-size: 1.5rem;\n        color: #667eea;\n    }\n    \n    .package-price .amount {\n        font-size: 3rem;\n        font-weight: bold;\n        color: #333;\n    }\n    \n    .credits-amount {\n        background: #f8f9fa;\n        padding: 15px;\n        border-radius: 10px;\n        margin-bottom: 15px;\n    }\n    \n    .credits-amount .number {\n        font-size: 2rem;\n        font-weight: bold;\n        color: #667eea;\n        display: block;\n    }\n    \n    .credits-amount .text {\n        color: #666;\n    }\n    \n    .price-per-credit {\n        color: #666;\n        margin-bottom: 10px;\n    }\n    \n    .savings {\n        background: #28a745;\n        color: white;\n        padding: 5px 10px;\n        border-radius: 15px;\n        display: inline-block;\n        font-size: 0.9rem;\n        margin-bottom: 20px;\n    }\n    \n    .package-features {\n        list-style: none;\n        padding: 0;\n        margin: 20px 0;\n        text-align: left;\n    }\n    \n    .package-features li {\n        padding: 8px 0;\n        color: #666;\n    }\n    \n    .btn-buy-package {\n        width: 100%;\n        padding: 15px;\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n        border: none;\n        border-radius: 25px;\n        font-weight: bold;\n        font-size: 1rem;\n        cursor: pointer;\n        transition: all 0.3s ease;\n    }\n    \n    .btn-buy-package:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);\n    }\n    \n    .btn-buy-package:disabled {\n        opacity: 0.6;\n        cursor: not-allowed;\n    }\n    \n    .payment-security {\n        background: #f8f9fa;\n        padding: 30px;\n        border-radius: 15px;\n        text-align: center;\n        margin-bottom: 40px;\n    }\n    \n    .security-badges {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        gap: 30px;\n        margin: 20px 0;\n    }\n    \n    .security-badges img {\n        height: 40px;\n    }\n    \n    .security-badges span {\n        background: white;\n        padding: 10px 20px;\n        border-radius: 20px;\n        font-weight: bold;\n        color: #333;\n    }\n    \n    .credits-faq {\n        max-width: 800px;\n        margin: 0 auto;\n    }\n    \n    .faq-item {\n        margin-bottom: 25px;\n        padding: 20px;\n        background: white;\n        border-radius: 10px;\n        border: 1px solid #e9ecef;\n    }\n    \n    .faq-item h4 {\n        margin: 0 0 10px 0;\n        color: #333;\n    }\n    \n    .faq-item p {\n        margin: 0;\n        color: #666;\n        line-height: 1.6;\n    }\n    \n    @media (max-width: 768px) {\n        .packages-grid {\n            grid-template-columns: 1fr;\n        }\n        \n        .package-card.popular {\n            transform: none;\n        }\n        \n        .credits-header {\n            flex-direction: column;\n            gap: 20px;\n        }\n        \n        .security-badges {\n            flex-direction: column;\n        }\n    }\n    <\/style>\n    <?php\n}\n\n\/\/ Admin settings page for Stripe configuration\nadd_action('admin_menu', 'jobmatch_add_stripe_settings_page');\n\nfunction jobmatch_add_stripe_settings_page() {\n    add_submenu_page(\n        'options-general.php',\n        'JobMatch Stripe Settings',\n        'JobMatch Payments',\n        'manage_options',\n        'jobmatch-stripe-settings',\n        'jobmatch_stripe_settings_page'\n    );\n}\n\nfunction jobmatch_stripe_settings_page() {\n    if (isset($_POST['submit'])) {\n        update_option('jobmatch_stripe_public_key', sanitize_text_field($_POST['stripe_public_key']));\n        update_option('jobmatch_stripe_secret_key', sanitize_text_field($_POST['stripe_secret_key']));\n        update_option('jobmatch_stripe_webhook_secret', sanitize_text_field($_POST['stripe_webhook_secret']));\n        echo '<div class=\"notice notice-success\"><p>Settings saved!<\/p><\/div>';\n    }\n    \n    ?>\n    <div class=\"wrap\">\n        <h1>JobMatch Stripe Settings<\/h1>\n        \n        <form method=\"post\">\n            <table class=\"form-table\">\n                <tr>\n                    <th scope=\"row\">Stripe Publishable Key<\/th>\n                    <td>\n                        <input type=\"text\" name=\"stripe_public_key\" value=\"<?php echo get_option('jobmatch_stripe_public_key'); ?>\" class=\"regular-text\" \/>\n                        <p class=\"description\">Your Stripe publishable key (starts with pk_)<\/p>\n                    <\/td>\n                <\/tr>\n                <tr>\n                    <th scope=\"row\">Stripe Secret Key<\/th>\n                    <td>\n                        <input type=\"password\" name=\"stripe_secret_key\" value=\"<?php echo get_option('jobmatch_stripe_secret_key'); ?>\" class=\"regular-text\" \/>\n                        <p class=\"description\">Your Stripe secret key (starts with sk_)<\/p>\n                    <\/td>\n                <\/tr>\n                <tr>\n                    <th scope=\"row\">Webhook Signing Secret<\/th>\n                    <td>\n                        <input type=\"text\" name=\"stripe_webhook_secret\" value=\"<?php echo get_option('jobmatch_stripe_webhook_secret'); ?>\" class=\"regular-text\" \/>\n                        <p class=\"description\">Your webhook endpoint signing secret<\/p>\n                    <\/td>\n                <\/tr>\n            <\/table>\n            \n            <p class=\"description\">\n                <strong>Webhook URL:<\/strong> <?php echo home_url('\/wp-json\/jobmatch\/v1\/stripe-webhook'); ?><br>\n                Add this URL to your Stripe webhook endpoints and listen for: checkout.session.completed\n            <\/p>\n            \n            <?php submit_button(); ?>\n        <\/form>\n    <\/div>\n    <?php\n}","active":true,"modified":"2025-09-24 16:15:52","revision":"1"}]}