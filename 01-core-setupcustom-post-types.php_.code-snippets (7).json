{"generator":"Code Snippets v3.7.0","date_created":"2025-09-26 10:47","snippets":[{"id":5,"name":"01-core-setup\/custom-post-types.php","code":"\n\/**\n * Custom Post Types for Job Matching Platform\n * Add this to Code Snippets plugin\n *\/\n\n\/\/ Register Custom Post Types\nadd_action('init', 'jobmatch_register_post_types');\n\nfunction jobmatch_register_post_types() {\n    \n    \/\/ JOBS POST TYPE\n    register_post_type('jobs', array(\n        'labels' => array(\n            'name' => 'Jobs',\n            'singular_name' => 'Job',\n            'add_new' => 'Add New Job',\n            'add_new_item' => 'Add New Job',\n            'edit_item' => 'Edit Job',\n            'new_item' => 'New Job',\n            'view_item' => 'View Job',\n            'search_items' => 'Search Jobs',\n            'not_found' => 'No jobs found',\n            'not_found_in_trash' => 'No jobs found in trash'\n        ),\n        'public' => true,\n        'has_archive' => true,\n        'rewrite' => array('slug' => 'jobs'),\n        'supports' => array('title', 'editor', 'author', 'custom-fields'),\n        'menu_icon' => 'dashicons-businessperson',\n        'show_in_rest' => true,\n        'capability_type' => 'post',\n        'map_meta_cap' => true,\n        'hierarchical' => false,\n    ));\n\n    \/\/ MATCHES POST TYPE\n    register_post_type('matches', array(\n        'labels' => array(\n            'name' => 'Matches',\n            'singular_name' => 'Match',\n            'add_new' => 'Add New Match',\n            'add_new_item' => 'Add New Match',\n            'edit_item' => 'Edit Match',\n            'new_item' => 'New Match',\n            'view_item' => 'View Match',\n            'search_items' => 'Search Matches',\n            'not_found' => 'No matches found',\n            'not_found_in_trash' => 'No matches found in trash'\n        ),\n        'public' => false,\n        'show_ui' => true,\n        'show_in_menu' => true,\n        'supports' => array('title', 'custom-fields'),\n        'menu_icon' => 'dashicons-heart',\n        'capability_type' => 'post',\n        'map_meta_cap' => true,\n    ));\n\n    \/\/ CREDIT TRANSACTIONS POST TYPE\n    register_post_type('credit_transactions', array(\n        'labels' => array(\n            'name' => 'Credit Transactions',\n            'singular_name' => 'Transaction',\n            'add_new' => 'Add Transaction',\n            'edit_item' => 'Edit Transaction',\n            'view_item' => 'View Transaction',\n            'search_items' => 'Search Transactions',\n        ),\n        'public' => false,\n        'show_ui' => true,\n        'show_in_menu' => true,\n        'supports' => array('title', 'custom-fields'),\n        'menu_icon' => 'dashicons-money-alt',\n        'capability_type' => 'post',\n    ));\n\n    \/\/ MESSAGES POST TYPE\n    register_post_type('messages', array(\n        'labels' => array(\n            'name' => 'Messages',\n            'singular_name' => 'Message',\n            'view_item' => 'View Message',\n            'search_items' => 'Search Messages',\n        ),\n        'public' => false,\n        'show_ui' => true,\n        'show_in_menu' => true,\n        'supports' => array('title', 'editor', 'author', 'custom-fields'),\n        'menu_icon' => 'dashicons-email-alt',\n        'capability_type' => 'post',\n    ));\n}\n\n\/\/ Register Custom Taxonomies\nadd_action('init', 'jobmatch_register_taxonomies');\n\nfunction jobmatch_register_taxonomies() {\n    \n    \/\/ INDUSTRY TAXONOMY\n    register_taxonomy('industry', array('jobs'), array(\n        'labels' => array(\n            'name' => 'Industries',\n            'singular_name' => 'Industry',\n            'add_new_item' => 'Add New Industry',\n            'edit_item' => 'Edit Industry',\n        ),\n        'hierarchical' => true,\n        'public' => true,\n        'show_ui' => true,\n        'show_in_rest' => true,\n        'rewrite' => array('slug' => 'industry'),\n    ));\n\n    \/\/ TECH STACK TAXONOMY\n    register_taxonomy('tech_stack', array('jobs'), array(\n        'labels' => array(\n            'name' => 'Tech Stack',\n            'singular_name' => 'Technology',\n            'add_new_item' => 'Add New Technology',\n            'edit_item' => 'Edit Technology',\n        ),\n        'hierarchical' => false,\n        'public' => true,\n        'show_ui' => true,\n        'show_in_rest' => true,\n        'rewrite' => array('slug' => 'tech'),\n    ));\n\n    \/\/ LOCATION REGION TAXONOMY\n    register_taxonomy('location_region', array('jobs'), array(\n        'labels' => array(\n            'name' => 'Location Regions',\n            'singular_name' => 'Location',\n            'add_new_item' => 'Add New Location',\n            'edit_item' => 'Edit Location',\n        ),\n        'hierarchical' => true,\n        'public' => true,\n        'show_ui' => true,\n        'show_in_rest' => true,\n        'rewrite' => array('slug' => 'location'),\n    ));\n}\n\n\/\/ Add custom columns to admin lists\nadd_filter('manage_jobs_posts_columns', 'jobmatch_jobs_columns');\nadd_action('manage_jobs_posts_custom_column', 'jobmatch_jobs_custom_column', 10, 2);\n\nfunction jobmatch_jobs_columns($columns) {\n    $new_columns = array();\n    $new_columns['cb'] = $columns['cb'];\n    $new_columns['title'] = $columns['title'];\n    $new_columns['company'] = 'Company';\n    $new_columns['salary'] = 'Salary';\n    $new_columns['location'] = 'Location';\n    $new_columns['status'] = 'Status';\n    $new_columns['date'] = $columns['date'];\n    return $new_columns;\n}\n\nfunction jobmatch_jobs_custom_column($column, $post_id) {\n    switch ($column) {\n        case 'company':\n            $author_id = get_post_field('post_author', $post_id);\n            $company_name = get_user_meta($author_id, 'anonymous_display_name', true);\n            echo $company_name ?: 'Unknown Company';\n            break;\n        case 'salary':\n            $salary = get_post_meta($post_id, 'salary_range', true);\n            echo $salary ? '\u20ac' . number_format($salary) : 'Not specified';\n            break;\n        case 'location':\n            $location = get_post_meta($post_id, 'job_location', true);\n            echo $location ?: 'Not specified';\n            break;\n        case 'status':\n            $status = get_post_status($post_id);\n            echo ucfirst($status);\n            break;\n    }\n}\n\n\/\/ Add custom columns to matches\nadd_filter('manage_matches_posts_columns', 'jobmatch_matches_columns');\nadd_action('manage_matches_posts_custom_column', 'jobmatch_matches_custom_column', 10, 2);\n\nfunction jobmatch_matches_columns($columns) {\n    return array(\n        'cb' => $columns['cb'],\n        'title' => 'Match ID',\n        'developer' => 'Developer',\n        'company' => 'Company',\n        'job' => 'Job',\n        'status' => 'Status',\n        'score' => 'Match Score',\n        'date' => 'Created',\n    );\n}\n\nfunction jobmatch_matches_custom_column($column, $post_id) {\n    switch ($column) {\n        case 'developer':\n            $dev_id = get_post_meta($post_id, 'developer_id', true);\n            if ($dev_id) {\n                $dev_name = get_user_meta($dev_id, 'anonymous_display_name', true);\n                echo $dev_name ?: 'Developer #' . $dev_id;\n            }\n            break;\n        case 'company':\n            $company_id = get_post_meta($post_id, 'company_id', true);\n            if ($company_id) {\n                $company_name = get_user_meta($company_id, 'anonymous_display_name', true);\n                echo $company_name ?: 'Company #' . $company_id;\n            }\n            break;\n        case 'job':\n            $job_id = get_post_meta($post_id, 'job_id', true);\n            if ($job_id) {\n                echo '<a href=\"' . get_edit_post_link($job_id) . '\">' . get_the_title($job_id) . '<\/a>';\n            }\n            break;\n        case 'status':\n            $status = get_post_meta($post_id, 'match_status', true);\n            $statuses = array(\n                'developer_liked' => '\ud83d\udc99 Developer Liked',\n                'company_liked' => '\ud83d\udc99 Company Liked', \n                'mutual' => '\ud83d\udc9a Mutual Match',\n                'revealed' => '\ud83c\udf89 Revealed',\n                'chatting' => '\ud83d\udcac Chatting'\n            );\n            echo $statuses[$status] ?? ucfirst($status);\n            break;\n        case 'score':\n            $score = get_post_meta($post_id, 'match_score', true);\n            echo $score ? $score . '%' : 'Not calculated';\n            break;\n    }\n}\n\n\/\/ Flush rewrite rules on activation\nregister_activation_hook(__FILE__, 'jobmatch_flush_rewrites');\nfunction jobmatch_flush_rewrites() {\n    jobmatch_register_post_types();\n    jobmatch_register_taxonomies();\n    flush_rewrite_rules();\n}\n\n\/\/ Add some default taxonomy terms\nadd_action('init', 'jobmatch_add_default_terms');\nfunction jobmatch_add_default_terms() {\n    \/\/ Only run once\n    if (get_option('jobmatch_default_terms_added')) {\n        return;\n    }\n\n    \/\/ Default industries\n    $industries = array(\n        'Technology', 'Finance', 'Healthcare', 'E-commerce', \n        'Manufacturing', 'Education', 'Media', 'Consulting'\n    );\n    foreach ($industries as $industry) {\n        if (!term_exists($industry, 'industry')) {\n            wp_insert_term($industry, 'industry');\n        }\n    }\n\n    \/\/ Default tech stack\n    $tech_stack = array(\n        'React', 'Vue.js', 'Angular', 'Node.js', 'Python', 'PHP', \n        'Java', 'C#', 'JavaScript', 'TypeScript', 'AWS', 'Docker', \n        'PostgreSQL', 'MongoDB', 'Redis', 'Git'\n    );\n    foreach ($tech_stack as $tech) {\n        if (!term_exists($tech, 'tech_stack')) {\n            wp_insert_term($tech, 'tech_stack');\n        }\n    }\n\n    \/\/ Default locations\n    $locations = array(\n        'Berlin', 'Munich', 'Hamburg', 'Frankfurt', 'Cologne', \n        'Stuttgart', 'Remote', 'Germany-wide'\n    );\n    foreach ($locations as $location) {\n        if (!term_exists($location, 'location_region')) {\n            wp_insert_term($location, 'location_region');\n        }\n    }\n\n    update_option('jobmatch_default_terms_added', true);\n}","active":true,"modified":"2025-09-22 20:11:26","revision":"1"}]}