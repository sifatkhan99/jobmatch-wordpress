{"generator":"Code Snippets v3.7.0","date_created":"2025-09-26 10:48","snippets":[{"id":30,"name":"Advanced Filtering Integration for Browse Pages","code":"\n\/**\n * Advanced Filtering Integration for Browse Pages\n * Add this as a new Code Snippet\n *\/\n\n\/\/ Add advanced filters to existing browse functionality\nadd_action('wp_ajax_jobmatch_apply_advanced_filters', 'jobmatch_handle_advanced_filters');\nadd_action('wp_ajax_nopriv_jobmatch_apply_advanced_filters', 'jobmatch_handle_advanced_filters');\n\nfunction jobmatch_handle_advanced_filters() {\n    check_ajax_referer('jobmatch_nonce', 'nonce');\n    \n    $user_id = get_current_user_id();\n    $user_role = get_user_meta($user_id, 'user_role', true);\n    $filters = isset($_POST['filters']) ? $_POST['filters'] : array();\n    $page = isset($_POST['page']) ? intval($_POST['page']) : 1;\n    \n    if ($user_role === 'developer') {\n        \/\/ Developer browsing jobs\n        $args = array(\n            'post_type' => 'jobs',\n            'post_status' => 'publish',\n            'posts_per_page' => 20,\n            'paged' => $page,\n            'meta_query' => array('relation' => 'AND'),\n            'tax_query' => array('relation' => 'AND')\n        );\n        \n        \/\/ Salary filter\n        if (!empty($filters['salary_min']) || !empty($filters['salary_max'])) {\n            if (!empty($filters['salary_min'])) {\n                $args['meta_query'][] = array(\n                    'key' => 'salary_max',\n                    'value' => intval($filters['salary_min']),\n                    'compare' => '>=',\n                    'type' => 'NUMERIC'\n                );\n            }\n            if (!empty($filters['salary_max'])) {\n                $args['meta_query'][] = array(\n                    'key' => 'salary_min',\n                    'value' => intval($filters['salary_max']),\n                    'compare' => '<=',\n                    'type' => 'NUMERIC'\n                );\n            }\n        }\n        \n        \/\/ Work type filter (remote\/onsite\/hybrid)\n        if (!empty($filters['work_type'])) {\n            $args['meta_query'][] = array(\n                'key' => 'work_preference',\n                'value' => sanitize_text_field($filters['work_type'])\n            );\n        }\n        \n        \/\/ Industry filter\n        if (!empty($filters['industry'])) {\n            $args['tax_query'][] = array(\n                'taxonomy' => 'industry',\n                'field' => 'term_id',\n                'terms' => intval($filters['industry'])\n            );\n        }\n        \n        \/\/ Tech stack filter (multiple)\n        if (!empty($filters['tech_stack']) && is_array($filters['tech_stack'])) {\n            $args['tax_query'][] = array(\n                'taxonomy' => 'tech_stack',\n                'field' => 'term_id',\n                'terms' => array_map('intval', $filters['tech_stack'])\n            );\n        }\n        \n        \/\/ Location\/Radius filter\n        if (!empty($filters['radius'])) {\n            $radius = $filters['radius'];\n            \n            if ($radius !== 'remote' && $radius !== 'germany' && is_numeric($radius)) {\n                \/\/ Get user coordinates\n                $user_coords = get_user_meta($user_id, 'lat_lng', true);\n                \n                if ($user_coords) {\n                    list($user_lat, $user_lng) = explode(',', $user_coords);\n                    \n                    \/\/ Get all jobs first to filter by distance\n                    $temp_args = $args;\n                    $temp_args['posts_per_page'] = -1;\n                    $temp_args['fields'] = 'ids';\n                    $all_jobs = get_posts($temp_args);\n                    \n                    $filtered_jobs = array();\n                    foreach ($all_jobs as $job_id) {\n                        $company_id = get_post_field('post_author', $job_id);\n                        $company_coords = get_user_meta($company_id, 'lat_lng', true);\n                        \n                        if ($company_coords) {\n                            list($comp_lat, $comp_lng) = explode(',', $company_coords);\n                            \n                            \/\/ Calculate distance\n                            $distance = jobmatch_calculate_distance($user_lat, $user_lng, $comp_lat, $comp_lng);\n                            \n                            if ($distance <= intval($radius)) {\n                                $filtered_jobs[] = $job_id;\n                            }\n                        }\n                    }\n                    \n                    $args['post__in'] = !empty($filtered_jobs) ? $filtered_jobs : array(0);\n                }\n            } elseif ($radius === 'remote') {\n                $args['meta_query'][] = array(\n                    'key' => 'work_preference',\n                    'value' => 'remote'\n                );\n            }\n        }\n        \n        \/\/ Culture fit filter\n        if (!empty($filters['culture']) && is_array($filters['culture'])) {\n            foreach ($filters['culture'] as $culture_key) {\n                $args['meta_query'][] = array(\n                    'key' => 'culture_' . sanitize_key($culture_key),\n                    'value' => 'yes',\n                    'compare' => '='\n                );\n            }\n        }\n        \n        $query = new WP_Query($args);\n        \n        ob_start();\n        ?>\n        <div class=\"browse-results-grid\">\n            <?php if ($query->have_posts()): ?>\n                <?php while ($query->have_posts()): $query->the_post(); ?>\n                    <?php \n                    $job_id = get_the_ID();\n                    $company_id = get_post_field('post_author', $job_id);\n                    $match_score = jobmatch_calculate_match_score($user_id, $job_id, 'job');\n                    $salary_min = get_post_meta($job_id, 'salary_min', true);\n                    $salary_max = get_post_meta($job_id, 'salary_max', true);\n                    $work_pref = get_post_meta($job_id, 'work_preference', true);\n                    ?>\n                    <div class=\"job-card\" data-job-id=\"<?php echo $job_id; ?>\">\n                        <div class=\"match-badge <?php echo jobmatch_get_match_class($match_score['score']); ?>\">\n                            <?php echo $match_score['score']; ?>% Match\n                        <\/div>\n                        \n                        <h3><?php the_title(); ?><\/h3>\n                        \n                        <div class=\"job-meta\">\n                            <span class=\"salary\">\u20ac<?php echo number_format($salary_min); ?> - \u20ac<?php echo number_format($salary_max); ?><\/span>\n                            <span class=\"work-type\"><?php echo ucfirst($work_pref); ?><\/span>\n                        <\/div>\n                        \n                        <div class=\"job-tech-stack\">\n                            <?php\n                            $tech_terms = wp_get_post_terms($job_id, 'tech_stack');\n                            foreach ($tech_terms as $term) {\n                                echo '<span class=\"tech-tag\">' . esc_html($term->name) . '<\/span>';\n                            }\n                            ?>\n                        <\/div>\n                        \n                        <div class=\"job-actions\">\n                            <button onclick=\"viewJob(<?php echo $job_id; ?>)\" class=\"btn btn-secondary\">View Details<\/button>\n                            <button onclick=\"likeJob(<?php echo $job_id; ?>)\" class=\"btn btn-primary\">Like<\/button>\n                        <\/div>\n                    <\/div>\n                <?php endwhile; ?>\n            <?php else: ?>\n                <div class=\"no-results\">\n                    <p>No jobs found matching your filters.<\/p>\n                    <p>Try adjusting your search criteria.<\/p>\n                <\/div>\n            <?php endif; ?>\n        <\/div>\n        \n        <?php if ($query->max_num_pages > 1): ?>\n            <div class=\"pagination\">\n                <?php for ($i = 1; $i <= $query->max_num_pages; $i++): ?>\n                    <button onclick=\"loadFilteredPage(<?php echo $i; ?>)\" class=\"page-btn <?php echo $i == $page ? 'active' : ''; ?>\">\n                        <?php echo $i; ?>\n                    <\/button>\n                <?php endfor; ?>\n            <\/div>\n        <?php endif; ?>\n        <?php\n        wp_reset_postdata();\n        \n    } else {\n        \/\/ Company browsing developers\n        $args = array(\n            'meta_key' => 'user_role',\n            'meta_value' => 'developer',\n            'number' => 20,\n            'paged' => $page,\n            'meta_query' => array(\n                'relation' => 'AND',\n                array(\n                    'key' => 'user_role',\n                    'value' => 'developer'\n                )\n            )\n        );\n        \n        \/\/ Experience level filter\n        if (!empty($filters['experience'])) {\n            $args['meta_query'][] = array(\n                'key' => 'experience_level',\n                'value' => sanitize_text_field($filters['experience'])\n            );\n        }\n        \n        \/\/ Availability filter\n        if (!empty($filters['availability'])) {\n            $args['meta_query'][] = array(\n                'key' => 'availability',\n                'value' => sanitize_text_field($filters['availability'])\n            );\n        }\n        \n        \/\/ Tech stack filter for developers\n        if (!empty($filters['tech_stack']) && is_array($filters['tech_stack'])) {\n            \/\/ This is more complex as tech_skills is stored as array\n            $args['meta_query'][] = array(\n                'key' => 'tech_skills',\n                'value' => serialize($filters['tech_stack']),\n                'compare' => 'LIKE'\n            );\n        }\n        \n        \/\/ Salary expectations filter\n        if (!empty($filters['max_salary'])) {\n            $args['meta_query'][] = array(\n                'key' => 'salary_expectation',\n                'value' => intval($filters['max_salary']),\n                'compare' => '<=',\n                'type' => 'NUMERIC'\n            );\n        }\n        \n        $developers = get_users($args);\n        \n        ob_start();\n        ?>\n        <div class=\"browse-results-grid\">\n            <?php if (!empty($developers)): ?>\n                <?php foreach ($developers as $developer): ?>\n                    <?php \n                    $dev_id = $developer->ID;\n                    $profile = jobmatch_get_anonymous_profile($dev_id, $user_id);\n                    $match_score = jobmatch_calculate_match_score($dev_id, $user_id, 'company');\n                    $experience = get_user_meta($dev_id, 'experience_level', true);\n                    $tech_skills = get_user_meta($dev_id, 'tech_skills', true);\n                    ?>\n                    <div class=\"developer-card\" data-developer-id=\"<?php echo $dev_id; ?>\">\n                        <div class=\"match-badge <?php echo jobmatch_get_match_class($match_score['score']); ?>\">\n                            <?php echo $match_score['score']; ?>% Match\n                        <\/div>\n                        \n                        <div class=\"developer-avatar\">\n                            <?php echo jobmatch_render_avatar($profile); ?>\n                        <\/div>\n                        \n                        <h3><?php echo esc_html($profile['display_name']); ?><\/h3>\n                        \n                        <div class=\"developer-meta\">\n                            <span class=\"experience\"><?php echo ucfirst($experience); ?> Level<\/span>\n                            <span class=\"skills-count\"><?php echo count($tech_skills); ?> Skills<\/span>\n                        <\/div>\n                        \n                        <div class=\"developer-tech-stack\">\n                            <?php\n                            if (is_array($tech_skills)) {\n                                $shown_skills = array_slice($tech_skills, 0, 5);\n                                foreach ($shown_skills as $skill) {\n                                    echo '<span class=\"tech-tag\">' . esc_html($skill) . '<\/span>';\n                                }\n                                if (count($tech_skills) > 5) {\n                                    echo '<span class=\"tech-tag\">+' . (count($tech_skills) - 5) . ' more<\/span>';\n                                }\n                            }\n                            ?>\n                        <\/div>\n                        \n                        <div class=\"developer-actions\">\n                            <button onclick=\"viewDeveloper(<?php echo $dev_id; ?>)\" class=\"btn btn-secondary\">View Profile<\/button>\n                            <button onclick=\"likeDeveloper(<?php echo $dev_id; ?>)\" class=\"btn btn-primary\">Like<\/button>\n                        <\/div>\n                    <\/div>\n                <?php endforeach; ?>\n            <?php else: ?>\n                <div class=\"no-results\">\n                    <p>No developers found matching your filters.<\/p>\n                    <p>Try adjusting your search criteria.<\/p>\n                <\/div>\n            <?php endif; ?>\n        <\/div>\n        <?php\n    }\n    \n    $html = ob_get_clean();\n    wp_send_json_success(array('html' => $html));\n}\n\n\/\/ Helper function to get match score class\nfunction jobmatch_get_match_class($score) {\n    if ($score >= 80) return 'excellent';\n    if ($score >= 60) return 'good';\n    if ($score >= 40) return 'fair';\n    return 'low';\n}\n\n\/\/ Render avatar helper\nfunction jobmatch_render_avatar($profile) {\n    if ($profile['type'] === 'developer') {\n        return '<span class=\"avatar-icon\">' . $profile['avatar'] . '<\/span>';\n    } else {\n        return '<span class=\"industry-icon\" style=\"color: ' . $profile['industry_color'] . '\">' . $profile['industry_icon'] . '<\/span>';\n    }\n}\n\n\/\/ Advanced filter UI shortcode\nadd_shortcode('jobmatch_advanced_filters', 'jobmatch_render_advanced_filters');\n\nfunction jobmatch_render_advanced_filters() {\n    $user_id = get_current_user_id();\n    $user_role = get_user_meta($user_id, 'user_role', true);\n    \n    ob_start();\n    ?>\n    <div class=\"advanced-filters-panel\">\n        <h3>\ud83d\udd0d Advanced Filters<\/h3>\n        \n        <div class=\"filters-grid\">\n            <?php if ($user_role === 'developer'): ?>\n                <!-- Developer Filters -->\n                <div class=\"filter-group\">\n                    <label>Salary Range (\u20ac)<\/label>\n                    <div class=\"range-inputs\">\n                        <input type=\"number\" id=\"filter-salary-min\" placeholder=\"Min\" step=\"5000\">\n                        <span>to<\/span>\n                        <input type=\"number\" id=\"filter-salary-max\" placeholder=\"Max\" step=\"5000\">\n                    <\/div>\n                <\/div>\n                \n                <div class=\"filter-group\">\n                    <label>Work Type<\/label>\n                    <select id=\"filter-work-type\">\n                        <option value=\"\">All Types<\/option>\n                        <option value=\"remote\">Remote Only<\/option>\n                        <option value=\"onsite\">Onsite Only<\/option>\n                        <option value=\"hybrid\">Hybrid<\/option>\n                    <\/select>\n                <\/div>\n                \n                <div class=\"filter-group\">\n                    <label>Industry<\/label>\n                    <select id=\"filter-industry\">\n                        <option value=\"\">All Industries<\/option>\n                        <?php\n                        $industries = get_terms('industry', array('hide_empty' => false));\n                        foreach ($industries as $industry) {\n                            echo '<option value=\"' . $industry->term_id . '\">' . esc_html($industry->name) . '<\/option>';\n                        }\n                        ?>\n                    <\/select>\n                <\/div>\n                \n            <?php else: ?>\n                <!-- Company Filters -->\n                <div class=\"filter-group\">\n                    <label>Experience Level<\/label>\n                    <select id=\"filter-experience\">\n                        <option value=\"\">All Levels<\/option>\n                        <option value=\"junior\">Junior (0-2 years)<\/option>\n                        <option value=\"mid\">Mid-level (2-5 years)<\/option>\n                        <option value=\"senior\">Senior (5-8 years)<\/option>\n                        <option value=\"lead\">Lead\/Principal (8+ years)<\/option>\n                    <\/select>\n                <\/div>\n                \n                <div class=\"filter-group\">\n                    <label>Max Salary Expectation (\u20ac)<\/label>\n                    <input type=\"number\" id=\"filter-max-salary\" placeholder=\"e.g. 80000\" step=\"5000\">\n                <\/div>\n                \n                <div class=\"filter-group\">\n                    <label>Availability<\/label>\n                    <select id=\"filter-availability\">\n                        <option value=\"\">Any<\/option>\n                        <option value=\"immediate\">Immediate<\/option>\n                        <option value=\"2weeks\">Within 2 weeks<\/option>\n                        <option value=\"month\">Within a month<\/option>\n                        <option value=\"notice\">On notice period<\/option>\n                    <\/select>\n                <\/div>\n            <?php endif; ?>\n            \n            <!-- Shared Filters -->\n            <div class=\"filter-group full-width\">\n                <label>Location Radius<\/label>\n                <select id=\"filter-radius\">\n                    <option value=\"\">Any Distance<\/option>\n                    <option value=\"5\">Within 5 km<\/option>\n                    <option value=\"10\">Within 10 km<\/option>\n                    <option value=\"15\">Within 15 km<\/option>\n                    <option value=\"30\">Within 30 km<\/option>\n                    <option value=\"50\">Within 50 km<\/option>\n                    <option value=\"100\">Within 100 km<\/option>\n                    <option value=\"300\">Within 300 km<\/option>\n                    <option value=\"germany\">Germany-wide<\/option>\n                    <option value=\"remote\">Remote Only<\/option>\n                <\/select>\n            <\/div>\n            \n            <div class=\"filter-group full-width\">\n                <label>Tech Stack (select multiple)<\/label>\n                <div class=\"tech-stack-selector\">\n                    <?php\n                    $tech_terms = get_terms('tech_stack', array('hide_empty' => false));\n                    foreach ($tech_terms as $term) {\n                        echo '<label class=\"tech-checkbox\">';\n                        echo '<input type=\"checkbox\" class=\"filter-tech\" value=\"' . $term->term_id . '\">';\n                        echo '<span>' . esc_html($term->name) . '<\/span>';\n                        echo '<\/label>';\n                    }\n                    ?>\n                <\/div>\n            <\/div>\n            \n            <div class=\"filter-group full-width\">\n                <label>Culture Preferences<\/label>\n                <div class=\"culture-selector\">\n                    <label class=\"culture-checkbox\">\n                        <input type=\"checkbox\" class=\"filter-culture\" value=\"flexible\">\n                        <span>Flexible Hours<\/span>\n                    <\/label>\n                    <label class=\"culture-checkbox\">\n                        <input type=\"checkbox\" class=\"filter-culture\" value=\"startup\">\n                        <span>Startup Environment<\/span>\n                    <\/label>\n                    <label class=\"culture-checkbox\">\n                        <input type=\"checkbox\" class=\"filter-culture\" value=\"corporate\">\n                        <span>Corporate Structure<\/span>\n                    <\/label>\n                    <label class=\"culture-checkbox\">\n                        <input type=\"checkbox\" class=\"filter-culture\" value=\"international\">\n                        <span>International Team<\/span>\n                    <\/label>\n                <\/div>\n            <\/div>\n        <\/div>\n        \n        <div class=\"filter-actions\">\n            <button onclick=\"applyAdvancedFilters()\" class=\"btn btn-primary\">Apply Filters<\/button>\n            <button onclick=\"resetAdvancedFilters()\" class=\"btn btn-secondary\">Reset All<\/button>\n            <span id=\"filter-count\" class=\"filter-count\">0 filters active<\/span>\n        <\/div>\n    <\/div>\n    \n    <div id=\"filtered-results\" class=\"filtered-results-container\">\n        <!-- Results will be loaded here -->\n    <\/div>\n    \n    <script>\n    function applyAdvancedFilters() {\n        \/\/ Gather all filter values\n        const filters = {\n            salary_min: document.getElementById('filter-salary-min')?.value,\n            salary_max: document.getElementById('filter-salary-max')?.value,\n            work_type: document.getElementById('filter-work-type')?.value,\n            industry: document.getElementById('filter-industry')?.value,\n            experience: document.getElementById('filter-experience')?.value,\n            max_salary: document.getElementById('filter-max-salary')?.value,\n            availability: document.getElementById('filter-availability')?.value,\n            radius: document.getElementById('filter-radius')?.value,\n            tech_stack: Array.from(document.querySelectorAll('.filter-tech:checked')).map(cb => cb.value),\n            culture: Array.from(document.querySelectorAll('.filter-culture:checked')).map(cb => cb.value)\n        };\n        \n        \/\/ Update filter count\n        let activeFilters = 0;\n        Object.keys(filters).forEach(key => {\n            if (filters[key] && (Array.isArray(filters[key]) ? filters[key].length > 0 : filters[key] !== '')) {\n                activeFilters++;\n            }\n        });\n        document.getElementById('filter-count').textContent = activeFilters + ' filters active';\n        \n        \/\/ Show loading\n        document.getElementById('filtered-results').innerHTML = '<div class=\"loading\">Loading results...<\/div>';\n        \n        \/\/ Make AJAX request\n        jQuery.post(ajaxurl, {\n            action: 'jobmatch_apply_advanced_filters',\n            filters: filters,\n            page: 1,\n            nonce: '<?php echo wp_create_nonce('jobmatch_nonce'); ?>'\n        }, function(response) {\n            if (response.success) {\n                document.getElementById('filtered-results').innerHTML = response.data.html;\n            } else {\n                document.getElementById('filtered-results').innerHTML = '<div class=\"error\">Error loading results<\/div>';\n            }\n        });\n    }\n    \n    function resetAdvancedFilters() {\n        \/\/ Reset all inputs\n        document.querySelectorAll('.advanced-filters-panel input[type=\"number\"]').forEach(input => input.value = '');\n        document.querySelectorAll('.advanced-filters-panel select').forEach(select => select.value = '');\n        document.querySelectorAll('.advanced-filters-panel input[type=\"checkbox\"]').forEach(cb => cb.checked = false);\n        \n        \/\/ Reset filter count\n        document.getElementById('filter-count').textContent = '0 filters active';\n        \n        \/\/ Clear results\n        document.getElementById('filtered-results').innerHTML = '';\n        \n        \/\/ Reload default results\n        applyAdvancedFilters();\n    }\n    \n    function loadFilteredPage(page) {\n        \/\/ Reapply filters with new page\n        const event = new Event('click');\n        document.querySelector('.btn-primary').dispatchEvent(event);\n    }\n    \n    \/\/ Initialize on page load\n    document.addEventListener('DOMContentLoaded', function() {\n        applyAdvancedFilters();\n    });\n    <\/script>\n    \n    <style>\n    .advanced-filters-panel {\n        background: white;\n        border-radius: 12px;\n        padding: 25px;\n        box-shadow: 0 2px 10px rgba(0,0,0,0.08);\n        margin-bottom: 30px;\n    }\n    \n    .filters-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n        gap: 20px;\n        margin: 20px 0;\n    }\n    \n    .filter-group {\n        display: flex;\n        flex-direction: column;\n    }\n    \n    .filter-group.full-width {\n        grid-column: 1 \/ -1;\n    }\n    \n    .filter-group label {\n        font-weight: 600;\n        margin-bottom: 8px;\n        color: #333;\n    }\n    \n    .range-inputs {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n    }\n    \n    .range-inputs input {\n        flex: 1;\n    }\n    \n    .tech-stack-selector,\n    .culture-selector {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n        gap: 10px;\n    }\n    \n    .tech-checkbox,\n    .culture-checkbox {\n        display: flex;\n        align-items: center;\n        padding: 8px 12px;\n        background: #f8f9fa;\n        border-radius: 6px;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n    \n    .tech-checkbox:hover,\n    .culture-checkbox:hover {\n        background: #e9ecef;\n    }\n    \n    .tech-checkbox input,\n    .culture-checkbox input {\n        margin-right: 8px;\n    }\n    \n    .filter-actions {\n        display: flex;\n        align-items: center;\n        gap: 15px;\n        margin-top: 20px;\n        padding-top: 20px;\n        border-top: 1px solid #e0e0e0;\n    }\n    \n    .filter-count {\n        margin-left: auto;\n        color: #667eea;\n        font-weight: 600;\n    }\n    \n    .filtered-results-container {\n        min-height: 400px;\n    }\n    \n    .browse-results-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n        gap: 25px;\n        margin-top: 30px;\n    }\n    \n    .job-card,\n    .developer-card {\n        background: white;\n        border-radius: 12px;\n        padding: 20px;\n        box-shadow: 0 2px 8px rgba(0,0,0,0.08);\n        position: relative;\n        transition: all 0.3s;\n    }\n    \n    .job-card:hover,\n    .developer-card:hover {\n        transform: translateY(-5px);\n        box-shadow: 0 5px 20px rgba(0,0,0,0.15);\n    }\n    \n    .match-badge {\n        position: absolute;\n        top: 15px;\n        right: 15px;\n        padding: 5px 12px;\n        border-radius: 20px;\n        font-weight: bold;\n        font-size: 0.9rem;\n        color: white;\n    }\n    \n    .match-badge.excellent {\n        background: linear-gradient(135deg, #11998e, #38ef7d);\n    }\n    \n    .match-badge.good {\n        background: linear-gradient(135deg, #667eea, #764ba2);\n    }\n    \n    .match-badge.fair {\n        background: linear-gradient(135deg, #f093fb, #f5576c);\n    }\n    \n    .match-badge.low {\n        background: #95a5a6;\n    }\n    \n    .tech-tag {\n        display: inline-block;\n        padding: 4px 10px;\n        background: #e3f2fd;\n        color: #1976d2;\n        border-radius: 15px;\n        font-size: 0.85rem;\n        margin-right: 5px;\n        margin-bottom: 5px;\n    }\n    \n    .loading {\n        text-align: center;\n        padding: 50px;\n        color: #666;\n    }\n    \n    .no-results {\n        text-align: center;\n        padding: 50px;\n        background: #f8f9fa;\n        border-radius: 12px;\n    }\n    \n    .pagination {\n        display: flex;\n        justify-content: center;\n        gap: 10px;\n        margin-top: 30px;\n    }\n    \n    .page-btn {\n        padding: 8px 15px;\n        border: 1px solid #e0e0e0;\n        background: white;\n        border-radius: 6px;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n    \n    .page-btn:hover {\n        background: #667eea;\n        color: white;\n        border-color: #667eea;\n    }\n    \n    .page-btn.active {\n        background: #667eea;\n        color: white;\n        border-color: #667eea;\n    }\n    <\/style>\n    <?php\n    return ob_get_clean();\n}","active":true,"modified":"2025-09-24 20:21:31","revision":"1"}]}