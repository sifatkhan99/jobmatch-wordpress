{"generator":"Code Snippets v3.7.0","date_created":"2025-09-26 10:47","snippets":[{"id":20,"name":"Enhanced Notification & Email System","code":"\n\/**\n * Enhanced Notification & Email System\n * Add this to Code Snippets plugin\n *\/\n\n\/\/ Enhanced notification system with email integration\n\/\/ \n\/\/ Add this function to the Enhanced Notification & Email System snippet\n\/\/ Place it near the top, after any existing notification functions\n\nfunction jobmatch_create_notification($user_id, $type, $title, $message, $data = array()) {\n    global $wpdb;\n    $table = $wpdb->prefix . 'jobmatch_notifications';\n    \n    \/\/ Insert notification into database\n    $result = $wpdb->insert($table, array(\n        'user_id' => $user_id,\n        'type' => $type,\n        'title' => $title,\n        'message' => $message,\n        'data' => json_encode($data),\n        'is_read' => 0,\n        'created_at' => current_time('mysql')\n    ));\n    \n    \/\/ Check if email notifications are enabled for this user\n    $email_enabled = get_user_meta($user_id, 'email_notifications', true);\n    if ($email_enabled !== 'off' && $email_enabled !== false) {\n        \/\/ Trigger email notification (this should hook into your existing email system)\n        do_action('jobmatch_send_email_notification', $user_id, $type, array(\n            'title' => $title,\n            'message' => $message,\n            'data' => $data\n        ));\n    }\n    \n    return $result ? $wpdb->insert_id : false;\n}\nfunction jobmatch_enhanced_add_notification($user_id, $type, $title, $message, $action_url = null, $metadata = array()) {\n    global $wpdb;\n    \n    $table_name = $wpdb->prefix . 'jobmatch_notifications';\n    \n    \/\/ Insert notification\n    $result = $wpdb->insert($table_name, array(\n        'user_id' => $user_id,\n        'type' => $type,\n        'title' => $title,\n        'message' => $message,\n        'action_url' => $action_url,\n        'metadata' => maybe_serialize($metadata)\n    ));\n    \n    if ($result) {\n        $notification_id = $wpdb->insert_id;\n        \n        \/\/ Check if user wants email notifications\n        $email_enabled = get_user_meta($user_id, 'email_notifications_enabled', true);\n        $notification_settings = get_user_meta($user_id, 'notification_preferences', true) ?: array();\n        \n        \/\/ Default settings if not set\n        if (empty($notification_settings)) {\n            $notification_settings = array(\n                'matches' => 'email',\n                'messages' => 'email',\n                'job_alerts' => 'email',\n                'credits' => 'app_only',\n                'system' => 'app_only'\n            );\n        }\n        \n        \/\/ Determine notification preference for this type\n        $preference = jobmatch_get_notification_preference($type, $notification_settings);\n        \n        if ($email_enabled === 'yes' && in_array($preference, array('email', 'both'))) {\n            \/\/ Schedule email to be sent\n            wp_schedule_single_event(time() + 30, 'jobmatch_send_notification_email', array($notification_id));\n        }\n        \n        \/\/ Real-time notification (if user is online)\n        do_action('jobmatch_real_time_notification', $user_id, array(\n            'id' => $notification_id,\n            'type' => $type,\n            'title' => $title,\n            'message' => $message,\n            'action_url' => $action_url\n        ));\n        \n        return $notification_id;\n    }\n    \n    return false;\n}\n\n\/\/ Map notification types to categories\nfunction jobmatch_get_notification_preference($type, $settings) {\n    $type_mapping = array(\n        'new_match' => 'matches',\n        'mutual_match' => 'matches',\n        'developer_liked' => 'matches',\n        'company_liked' => 'matches',\n        'new_message' => 'messages',\n        'high_match_job' => 'job_alerts',\n        'job_from_matched_company' => 'job_alerts',\n        'low_credits' => 'credits',\n        'credits_added' => 'credits',\n        'payment_success' => 'credits',\n        'welcome' => 'system',\n        'profile_incomplete' => 'system'\n    );\n    \n    $category = $type_mapping[$type] ?? 'system';\n    return $settings[$category] ?? 'app_only';\n}\n\n\/\/ Enhanced email notification sending\nadd_action('jobmatch_send_notification_email', 'jobmatch_send_notification_email');\nfunction jobmatch_send_notification_email($notification_id) {\n    global $wpdb;\n    \n    $table_name = $wpdb->prefix . 'jobmatch_notifications';\n    \n    $notification = $wpdb->get_row($wpdb->prepare(\n        \"SELECT * FROM $table_name WHERE id = %d AND email_sent = 0\",\n        $notification_id\n    ));\n    \n    if (!$notification) {\n        return;\n    }\n    \n    $user = get_userdata($notification->user_id);\n    if (!$user) {\n        return;\n    }\n    \n    \/\/ Get email template\n    $email_data = jobmatch_get_email_template($notification->type, $notification, $user);\n    \n    if (!$email_data) {\n        return;\n    }\n    \n    \/\/ Set email headers\n    $headers = array(\n        'Content-Type: text\/html; charset=UTF-8',\n        'From: ' . get_bloginfo('name') . ' <noreply@' . parse_url(home_url(), PHP_URL_HOST) . '>'\n    );\n    \n    \/\/ Send email\n    $sent = wp_mail(\n        $user->user_email,\n        $email_data['subject'],\n        $email_data['body'],\n        $headers\n    );\n    \n    if ($sent) {\n        \/\/ Mark as sent\n        $wpdb->update($table_name, \n            array('email_sent' => 1, 'email_sent_at' => current_time('mysql')),\n            array('id' => $notification_id)\n        );\n        \n        \/\/ Log successful send\n        error_log(\"Email notification sent to {$user->user_email} for notification type: {$notification->type}\");\n    } else {\n        error_log(\"Failed to send email notification to {$user->user_email} for notification type: {$notification->type}\");\n    }\n}\n\n\/\/ Email template generator\nfunction jobmatch_get_email_template($type, $notification, $user) {\n    $user_role = get_user_meta($user->ID, 'user_role', true);\n    $user_name = jobmatch_get_display_name($user->ID);\n    $site_name = get_bloginfo('name');\n    $site_url = home_url();\n    \n    $templates = array(\n        'new_match' => array(\n            'subject' => \"Someone's interested in you! - {$site_name}\",\n            'body' => jobmatch_render_email_template('new_match', array(\n                'user_name' => $user_name,\n                'message' => $notification->message,\n                'action_url' => $notification->action_url,\n                'site_name' => $site_name,\n                'site_url' => $site_url\n            ))\n        ),\n        'mutual_match' => array(\n            'subject' => \"\ud83c\udf89 It's a Match! - {$site_name}\",\n            'body' => jobmatch_render_email_template('mutual_match', array(\n                'user_name' => $user_name,\n                'message' => $notification->message,\n                'action_url' => $notification->action_url,\n                'site_name' => $site_name,\n                'site_url' => $site_url\n            ))\n        ),\n        'new_message' => array(\n            'subject' => \"New message waiting for you - {$site_name}\",\n            'body' => jobmatch_render_email_template('new_message', array(\n                'user_name' => $user_name,\n                'message' => $notification->message,\n                'action_url' => $notification->action_url,\n                'site_name' => $site_name,\n                'site_url' => $site_url\n            ))\n        ),\n        'high_match_job' => array(\n            'subject' => \"\ud83c\udfaf High Match Job Alert - {$site_name}\",\n            'body' => jobmatch_render_email_template('job_alert', array(\n                'user_name' => $user_name,\n                'message' => $notification->message,\n                'action_url' => $notification->action_url,\n                'site_name' => $site_name,\n                'site_url' => $site_url\n            ))\n        ),\n        'job_from_matched_company' => array(\n            'subject' => \"New job from a company you matched with - {$site_name}\",\n            'body' => jobmatch_render_email_template('job_from_match', array(\n                'user_name' => $user_name,\n                'message' => $notification->message,\n                'action_url' => $notification->action_url,\n                'site_name' => $site_name,\n                'site_url' => $site_url\n            ))\n        ),\n        'low_credits' => array(\n            'subject' => \"\u26a0\ufe0f Low Credit Balance - {$site_name}\",\n            'body' => jobmatch_render_email_template('low_credits', array(\n                'user_name' => $user_name,\n                'message' => $notification->message,\n                'action_url' => $notification->action_url,\n                'site_name' => $site_name,\n                'site_url' => $site_url\n            ))\n        ),\n        'welcome' => array(\n            'subject' => \"Welcome to {$site_name}! \ud83c\udf89\",\n            'body' => jobmatch_render_email_template('welcome', array(\n                'user_name' => $user_name,\n                'user_role' => $user_role,\n                'message' => $notification->message,\n                'action_url' => $notification->action_url,\n                'site_name' => $site_name,\n                'site_url' => $site_url\n            ))\n        )\n    );\n    \n    return $templates[$type] ?? null;\n}\n\n\/\/ Email template renderer\nfunction jobmatch_render_email_template($template_type, $vars) {\n    extract($vars);\n    \n    ob_start();\n    ?>\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title><?php echo $site_name; ?><\/title>\n        <style>\n            body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; background: #f8f9fa; margin: 0; padding: 0; }\n            .container { max-width: 600px; margin: 0 auto; background: white; }\n            .header { background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 30px; text-align: center; }\n            .header h1 { margin: 0; font-size: 24px; }\n            .content { padding: 30px; }\n            .content h2 { color: #333; margin-top: 0; }\n            .content p { margin: 16px 0; }\n            .button { display: inline-block; background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 12px 24px; text-decoration: none; border-radius: 25px; font-weight: bold; margin: 20px 0; }\n            .footer { background: #f8f9fa; padding: 20px; text-align: center; font-size: 14px; color: #666; border-top: 1px solid #e9ecef; }\n            .footer a { color: #667eea; text-decoration: none; }\n            .highlight { background: linear-gradient(135deg, #e3f2fd, #f3e5f5); padding: 20px; border-radius: 10px; margin: 20px 0; }\n            @media (max-width: 600px) { .content { padding: 20px; } }\n        <\/style>\n    <\/head>\n    <body>\n        <div class=\"container\">\n            <div class=\"header\">\n                <h1><?php echo $site_name; ?><\/h1>\n                <p>Where talent meets opportunity<\/p>\n            <\/div>\n            \n            <div class=\"content\">\n                <?php if ($template_type === 'new_match'): ?>\n                    <h2>Someone's interested in you! \ud83d\udc99<\/h2>\n                    <p>Hi <?php echo $user_name; ?>,<\/p>\n                    <p><?php echo $message; ?><\/p>\n                    <div class=\"highlight\">\n                        <p><strong>What happens next?<\/strong><\/p>\n                        <p>If you're also interested, like them back to create a mutual match and unlock contact details!<\/p>\n                    <\/div>\n                    <a href=\"<?php echo $action_url; ?>\" class=\"button\">View Your Matches<\/a>\n                    \n                <?php elseif ($template_type === 'mutual_match'): ?>\n                    <h2>\ud83c\udf89 It's a Match!<\/h2>\n                    <p>Hi <?php echo $user_name; ?>,<\/p>\n                    <p><?php echo $message; ?><\/p>\n                    <div class=\"highlight\">\n                        <p><strong>\ud83c\udfaf You can now:<\/strong><\/p>\n                        <ul>\n                            <li>See their real contact information<\/li>\n                            <li>Start chatting directly<\/li>\n                            <li>Take the next step in your career journey<\/li>\n                        <\/ul>\n                    <\/div>\n                    <a href=\"<?php echo $action_url; ?>\" class=\"button\">Start Chatting<\/a>\n                    \n                <?php elseif ($template_type === 'new_message'): ?>\n                    <h2>You have a new message \ud83d\udcac<\/h2>\n                    <p>Hi <?php echo $user_name; ?>,<\/p>\n                    <p><?php echo $message; ?><\/p>\n                    <a href=\"<?php echo $action_url; ?>\" class=\"button\">Read Message<\/a>\n                    \n                <?php elseif ($template_type === 'job_alert'): ?>\n                    <h2>\ud83c\udfaf High Match Job Alert<\/h2>\n                    <p>Hi <?php echo $user_name; ?>,<\/p>\n                    <p><?php echo $message; ?><\/p>\n                    <div class=\"highlight\">\n                        <p><strong>Why this job is perfect for you:<\/strong><\/p>\n                        <p>Our matching algorithm identified this opportunity as highly compatible with your skills, salary expectations, and preferences.<\/p>\n                    <\/div>\n                    <a href=\"<?php echo $action_url; ?>\" class=\"button\">View Job Details<\/a>\n                    \n                <?php elseif ($template_type === 'job_from_match'): ?>\n                    <h2>New opportunity from a company you matched with! \ud83d\ude80<\/h2>\n                    <p>Hi <?php echo $user_name; ?>,<\/p>\n                    <p><?php echo $message; ?><\/p>\n                    <div class=\"highlight\">\n                        <p><strong>Special advantage:<\/strong><\/p>\n                        <p>Since you've already matched with this company, you have an inside track on this new position!<\/p>\n                    <\/div>\n                    <a href=\"<?php echo $action_url; ?>\" class=\"button\">View New Job<\/a>\n                    \n                <?php elseif ($template_type === 'low_credits'): ?>\n                    <h2>\u26a0\ufe0f Your credits are running low<\/h2>\n                    <p>Hi <?php echo $user_name; ?>,<\/p>\n                    <p><?php echo $message; ?><\/p>\n                    <div class=\"highlight\">\n                        <p><strong>Don't miss out on great matches!<\/strong><\/p>\n                        <p>Top up your credits to continue revealing developer contacts when you get mutual matches.<\/p>\n                    <\/div>\n                    <a href=\"<?php echo $action_url; ?>\" class=\"button\">Buy More Credits<\/a>\n                    \n                <?php elseif ($template_type === 'welcome'): ?>\n                    <h2>Welcome to <?php echo $site_name; ?>! \ud83c\udf89<\/h2>\n                    <p>Hi <?php echo $user_name; ?>,<\/p>\n                    <p>Welcome to the future of job matching! Your profile is now complete and you're ready to start connecting with <?php echo $user_role === 'developer' ? 'amazing companies' : 'talented developers'; ?>.<\/p>\n                    \n                    <div class=\"highlight\">\n                        <p><strong>What makes us different:<\/strong><\/p>\n                        <ul>\n                            <li>\ud83c\udfaf AI-powered matching based on skills, culture, and preferences<\/li>\n                            <li>\ud83d\udd12 Anonymous profiles until mutual interest<\/li>\n                            <li>\ud83d\udcac Direct chat after mutual matches<\/li>\n                            <li><?php echo $user_role === 'developer' ? '\ud83d\ude80 No application hassle - companies come to you' : '\ud83d\udc8e Access to pre-screened, interested developers'; ?><\/li>\n                        <\/ul>\n                    <\/div>\n                    \n                    <?php if ($user_role === 'developer'): ?>\n                        <p><strong>Next steps:<\/strong><\/p>\n                        <ul>\n                            <li>Browse job opportunities that match your profile<\/li>\n                            <li>Like the ones you're interested in<\/li>\n                            <li>Wait for companies to like you back<\/li>\n                            <li>Start conversations with mutual matches<\/li>\n                        <\/ul>\n                    <?php else: ?>\n                        <p><strong>Next steps:<\/strong><\/p>\n                        <ul>\n                            <li>Post your first job opportunity<\/li>\n                            <li>Browse developer profiles<\/li>\n                            <li>Like developers you want to hire<\/li>\n                            <li>Use credits to reveal contact details when you get matches<\/li>\n                        <\/ul>\n                        <p>\ud83d\udcb0 <strong>You started with 25 free credits<\/strong> - enough for 25 developer reveals!<\/p>\n                    <?php endif; ?>\n                    \n                    <a href=\"<?php echo $action_url; ?>\" class=\"button\">Go to Dashboard<\/a>\n                <?php endif; ?>\n                \n                <p>Thanks for being part of our community!<\/p>\n                <p>The <?php echo $site_name; ?> Team<\/p>\n            <\/div>\n            \n            <div class=\"footer\">\n                <p>You're receiving this email because you have email notifications enabled.<\/p>\n                <p><a href=\"<?php echo home_url('\/notification-preferences\/'); ?>\">Update your notification preferences<\/a> | \n                   <a href=\"<?php echo $site_url; ?>\">Visit <?php echo $site_name; ?><\/a><\/p>\n                <p>&copy; <?php echo date('Y'); ?> <?php echo $site_name; ?>. All rights reserved.<\/p>\n            <\/div>\n        <\/div>\n    <\/body>\n    <\/html>\n    <?php\n    return ob_get_clean();\n}\n\n\/\/ Job alert system - notify developers when matched companies post new jobs\nadd_action('transition_post_status', 'jobmatch_check_job_alerts', 10, 3);\nfunction jobmatch_check_job_alerts($new_status, $old_status, $post) {\n    if ($post->post_type !== 'jobs' || $new_status !== 'publish' || $old_status === 'publish') {\n        return;\n    }\n    \n    $company_id = $post->post_author;\n    \n    \/\/ Find developers who have matched with this company\n    global $wpdb;\n    $matched_developers = $wpdb->get_col($wpdb->prepare(\"\n        SELECT DISTINCT pm_dev.meta_value as developer_id\n        FROM {$wpdb->posts} p\n        LEFT JOIN {$wpdb->postmeta} pm_dev ON p.ID = pm_dev.post_id AND pm_dev.meta_key = 'developer_id'\n        LEFT JOIN {$wpdb->postmeta} pm_comp ON p.ID = pm_comp.post_id AND pm_comp.meta_key = 'company_id'\n        LEFT JOIN {$wpdb->postmeta} pm_status ON p.ID = pm_status.post_id AND pm_status.meta_key = 'match_status'\n        WHERE p.post_type = 'matches'\n        AND p.post_status = 'publish'\n        AND pm_comp.meta_value = %s\n        AND pm_status.meta_value IN ('mutual', 'revealed', 'chatting')\n    \", $company_id));\n    \n    if (empty($matched_developers)) {\n        return;\n    }\n    \n    $company_name = jobmatch_get_display_name($company_id);\n    $job_title = $post->post_title;\n    $job_url = get_permalink($post->ID);\n    \n    foreach ($matched_developers as $developer_id) {\n        \/\/ Check if developer wants job alerts\n        $notification_settings = get_user_meta($developer_id, 'notification_preferences', true) ?: array();\n        $job_alert_setting = $notification_settings['job_alerts'] ?? 'email';\n        \n        if ($job_alert_setting !== 'disabled') {\n            jobmatch_enhanced_add_notification(\n                $developer_id,\n                'job_from_matched_company',\n                'New Job from ' . $company_name,\n                \"Great news! {$company_name}, a company you've matched with, just posted a new job: \\\"{$job_title}\\\". You have an advantage since you've already connected!\",\n                $job_url,\n                array(\n                    'company_id' => $company_id,\n                    'job_id' => $post->ID,\n                    'job_title' => $job_title\n                )\n            );\n        }\n    }\n}\n\n\/\/ Notification preferences page shortcode\nadd_shortcode('jobmatch_notification_preferences', 'jobmatch_notification_preferences_page');\nfunction jobmatch_notification_preferences_page() {\n    if (!is_user_logged_in()) {\n        return '<p>Please log in to manage your notification preferences.<\/p>';\n    }\n    \n    $user_id = get_current_user_id();\n    \n    \/\/ Process form submission\n    if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['preferences_nonce'])) {\n        jobmatch_update_notification_preferences($user_id, $_POST);\n        $success_message = 'Preferences updated successfully!';\n    }\n    \n    $current_preferences = get_user_meta($user_id, 'notification_preferences', true) ?: array(\n        'matches' => 'email',\n        'messages' => 'email',\n        'job_alerts' => 'email',\n        'credits' => 'app_only',\n        'system' => 'app_only'\n    );\n    \n    $email_enabled = get_user_meta($user_id, 'email_notifications_enabled', true);\n    \n    ob_start();\n    ?>\n    <div class=\"notification-preferences\">\n        <h2>\ud83d\udd14 Notification Preferences<\/h2>\n        <p>Choose how you'd like to receive different types of notifications.<\/p>\n        \n        <?php if (isset($success_message)): ?>\n            <div class=\"alert alert-success\"><?php echo $success_message; ?><\/div>\n        <?php endif; ?>\n        \n        <form method=\"POST\" class=\"preferences-form\">\n            <?php wp_nonce_field('notification_preferences', 'preferences_nonce'); ?>\n            \n            <div class=\"preference-section\">\n                <h3>Email Notifications<\/h3>\n                <label class=\"master-toggle\">\n                    <input type=\"checkbox\" name=\"email_notifications_enabled\" value=\"yes\" \n                           <?php checked($email_enabled, 'yes'); ?> onchange=\"toggleEmailOptions(this.checked)\">\n                    <span class=\"toggle-text\">Enable email notifications<\/span>\n                <\/label>\n                <p class=\"description\">Master switch for all email notifications. You'll still get in-app notifications.<\/p>\n            <\/div>\n            \n            <div id=\"emailOptions\" style=\"<?php echo $email_enabled === 'yes' ? '' : 'display:none;'; ?>\">\n                <div class=\"preference-categories\">\n                    \n                    <div class=\"category-section\">\n                        <h4>\ud83d\udc99 Matches & Connections<\/h4>\n                        <div class=\"preference-item\">\n                            <label>When someone likes you or you get a mutual match<\/label>\n                            <select name=\"preferences[matches]\">\n                                <option value=\"email\" <?php selected($current_preferences['matches'], 'email'); ?>>Email + In-app<\/option>\n                                <option value=\"app_only\" <?php selected($current_preferences['matches'], 'app_only'); ?>>In-app only<\/option>\n                                <option value=\"disabled\" <?php selected($current_preferences['matches'], 'disabled'); ?>>Disabled<\/option>\n                            <\/select>\n                        <\/div>\n                    <\/div>\n                    \n                    <div class=\"category-section\">\n                        <h4>\ud83d\udcac Messages<\/h4>\n                        <div class=\"preference-item\">\n                            <label>When you receive new messages<\/label>\n                            <select name=\"preferences[messages]\">\n                                <option value=\"email\" <?php selected($current_preferences['messages'], 'email'); ?>>Email + In-app<\/option>\n                                <option value=\"app_only\" <?php selected($current_preferences['messages'], 'app_only'); ?>>In-app only<\/option>\n                                <option value=\"disabled\" <?php selected($current_preferences['messages'], 'disabled'); ?>>Disabled<\/option>\n                            <\/select>\n                        <\/div>\n                    <\/div>\n                    \n                    <div class=\"category-section\">\n                        <h4>\ud83c\udfaf Job Alerts<\/h4>\n                        <div class=\"preference-item\">\n                            <label>High match jobs and jobs from matched companies<\/label>\n                            <select name=\"preferences[job_alerts]\">\n                                <option value=\"email\" <?php selected($current_preferences['job_alerts'], 'email'); ?>>Email + In-app<\/option>\n                                <option value=\"app_only\" <?php selected($current_preferences['job_alerts'], 'app_only'); ?>>In-app only<\/option>\n                                <option value=\"disabled\" <?php selected($current_preferences['job_alerts'], 'disabled'); ?>>Disabled<\/option>\n                            <\/select>\n                        <\/div>\n                    <\/div>\n                    \n                    <div class=\"category-section\">\n                        <h4>\ud83d\udcb0 Credits & Payments<\/h4>\n                        <div class=\"preference-item\">\n                            <label>Low credit balance and payment confirmations<\/label>\n                            <select name=\"preferences[credits]\">\n                                <option value=\"email\" <?php selected($current_preferences['credits'], 'email'); ?>>Email + In-app<\/option>\n                                <option value=\"app_only\" <?php selected($current_preferences['credits'], 'app_only'); ?>>In-app only<\/option>\n                                <option value=\"disabled\" <?php selected($current_preferences['credits'], 'disabled'); ?>>Disabled<\/option>\n                            <\/select>\n                        <\/div>\n                    <\/div>\n                    \n                    <div class=\"category-section\">\n                        <h4>\u2699\ufe0f System & Updates<\/h4>\n                        <div class=\"preference-item\">\n                            <label>Welcome messages, profile reminders, and system updates<\/label>\n                            <select name=\"preferences[system]\">\n                                <option value=\"email\" <?php selected($current_preferences['system'], 'email'); ?>>Email + In-app<\/option>\n                                <option value=\"app_only\" <?php selected($current_preferences['system'], 'app_only'); ?>>In-app only<\/option>\n                                <option value=\"disabled\" <?php selected($current_preferences['system'], 'disabled'); ?>>Disabled<\/option>\n                            <\/select>\n                        <\/div>\n                    <\/div>\n                    \n                <\/div>\n            <\/div>\n            \n            <div class=\"form-actions\">\n                <button type=\"submit\" class=\"btn-save\">Save Preferences<\/button>\n                <button type=\"button\" class=\"btn-test-email\" onclick=\"testEmail()\">Send Test Email<\/button>\n            <\/div>\n        <\/form>\n        \n        <div class=\"notification-stats\">\n            <h3>\ud83d\udcca Your Notification Activity<\/h3>\n            <?php echo jobmatch_render_notification_stats($user_id); ?>\n        <\/div>\n    <\/div>\n    \n    <script>\n    function toggleEmailOptions(enabled) {\n        const emailOptions = document.getElementById('emailOptions');\n        emailOptions.style.display = enabled ? 'block' : 'none';\n    }\n    \n    function testEmail() {\n        jQuery.post('<?php echo admin_url('admin-ajax.php'); ?>', {\n            action: 'send_test_notification_email',\n            nonce: '<?php echo wp_create_nonce('jobmatch_nonce'); ?>'\n        }, function(response) {\n            if (response.success) {\n                alert('Test email sent successfully! Check your inbox.');\n            } else {\n                alert('Failed to send test email: ' + response.data);\n            }\n        });\n    }\n    <\/script>\n    \n    <style>\n    .notification-preferences {\n        max-width: 800px;\n        margin: 0 auto;\n        padding: 20px;\n    }\n    \n    .notification-preferences h2 {\n        margin: 0 0 20px 0;\n        color: #333;\n    }\n    \n    .alert {\n        padding: 15px 20px;\n        border-radius: 8px;\n        margin-bottom: 25px;\n    }\n    \n    .alert-success {\n        background: #d4edda;\n        color: #155724;\n        border: 1px solid #c3e6cb;\n    }\n    \n    .preferences-form {\n        background: white;\n        border-radius: 15px;\n        padding: 30px;\n        box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n        margin-bottom: 30px;\n    }\n    \n    .preference-section {\n        margin-bottom: 30px;\n        padding-bottom: 20px;\n        border-bottom: 1px solid #e9ecef;\n    }\n    \n    .preference-section h3 {\n        margin: 0 0 15px 0;\n        color: #333;\n    }\n    \n    .master-toggle {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        font-size: 1.1rem;\n        font-weight: bold;\n        cursor: pointer;\n    }\n    \n    .master-toggle input[type=\"checkbox\"] {\n        width: 20px;\n        height: 20px;\n        cursor: pointer;\n    }\n    \n    .description {\n        margin: 10px 0 0 30px;\n        color: #666;\n        font-size: 0.9rem;\n    }\n    \n    .preference-categories {\n        display: grid;\n        gap: 25px;\n        margin-top: 20px;\n    }\n    \n    .category-section {\n        background: #f8f9fa;\n        padding: 20px;\n        border-radius: 12px;\n    }\n    \n    .category-section h4 {\n        margin: 0 0 15px 0;\n        color: #333;\n        font-size: 1.05rem;\n    }\n    \n    .preference-item {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 15px;\n    }\n    \n    .preference-item:last-child {\n        margin-bottom: 0;\n    }\n    \n    .preference-item label {\n        flex: 1;\n        color: #333;\n        font-weight: 500;\n    }\n    \n    .preference-item select {\n        padding: 8px 12px;\n        border: 2px solid #e9ecef;\n        border-radius: 6px;\n        background: white;\n        min-width: 140px;\n        font-size: 0.9rem;\n    }\n    \n    .preference-item select:focus {\n        outline: none;\n        border-color: #667eea;\n    }\n    \n    .form-actions {\n        display: flex;\n        gap: 15px;\n        justify-content: center;\n        margin-top: 30px;\n        padding-top: 20px;\n        border-top: 1px solid #e9ecef;\n    }\n    \n    .btn-save,\n    .btn-test-email {\n        padding: 12px 24px;\n        border: none;\n        border-radius: 25px;\n        font-weight: bold;\n        cursor: pointer;\n        font-size: 1rem;\n        transition: all 0.3s ease;\n    }\n    \n    .btn-save {\n        background: linear-gradient(135deg, #667eea, #764ba2);\n        color: white;\n    }\n    \n    .btn-test-email {\n        background: white;\n        color: #667eea;\n        border: 2px solid #667eea;\n    }\n    \n    .btn-save:hover,\n    .btn-test-email:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n    }\n    \n    .notification-stats {\n        background: white;\n        border-radius: 15px;\n        padding: 30px;\n        box-shadow: 0 4px 15px rgba(0,0,0,0.1);\n    }\n    \n    .notification-stats h3 {\n        margin: 0 0 20px 0;\n        color: #333;\n    }\n    \n    .stats-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        gap: 20px;\n    }\n    \n    .stat-item {\n        text-align: center;\n        padding: 15px;\n        background: #f8f9fa;\n        border-radius: 10px;\n    }\n    \n    .stat-number {\n        font-size: 2rem;\n        font-weight: bold;\n        color: #667eea;\n        display: block;\n    }\n    \n    .stat-label {\n        color: #666;\n        font-size: 0.9rem;\n        margin-top: 5px;\n    }\n    \n    @media (max-width: 768px) {\n        .preference-item {\n            flex-direction: column;\n            align-items: stretch;\n            gap: 8px;\n        }\n        \n        .preference-item select {\n            min-width: auto;\n        }\n        \n        .form-actions {\n            flex-direction: column;\n        }\n        \n        .btn-save,\n        .btn-test-email {\n            width: 100%;\n        }\n    }\n    <\/style>\n    <?php\n    return ob_get_clean();\n}\n\n\/\/ Update notification preferences\nfunction jobmatch_update_notification_preferences($user_id, $data) {\n    if (!wp_verify_nonce($data['preferences_nonce'], 'notification_preferences')) {\n        return;\n    }\n    \n    \/\/ Update email master switch\n    $email_enabled = isset($data['email_notifications_enabled']) ? 'yes' : 'no';\n    update_user_meta($user_id, 'email_notifications_enabled', $email_enabled);\n    \n    \/\/ Update individual preferences\n    $preferences = $data['preferences'] ?? array();\n    $valid_preferences = array('email', 'app_only', 'disabled');\n    \n    foreach ($preferences as $key => $value) {\n        if (in_array($value, $valid_preferences)) {\n            $preferences[$key] = $value;\n        }\n    }\n    \n    update_user_meta($user_id, 'notification_preferences', $preferences);\n}\n\n\/\/ Render notification statistics\nfunction jobmatch_render_notification_stats($user_id) {\n    global $wpdb;\n    \n    $table_name = $wpdb->prefix . 'jobmatch_notifications';\n    \n    \/\/ Get stats for the last 30 days\n    $stats = $wpdb->get_row($wpdb->prepare(\"\n        SELECT \n            COUNT(*) as total_notifications,\n            COUNT(CASE WHEN is_read = 1 THEN 1 END) as read_notifications,\n            COUNT(CASE WHEN email_sent = 1 THEN 1 END) as emails_sent,\n            COUNT(CASE WHEN type = 'new_match' OR type = 'mutual_match' THEN 1 END) as match_notifications,\n            COUNT(CASE WHEN type = 'new_message' THEN 1 END) as message_notifications\n        FROM $table_name \n        WHERE user_id = %d \n        AND created_at >= DATE_SUB(NOW(), INTERVAL 30 DAY)\n    \", $user_id));\n    \n    ob_start();\n    ?>\n    <div class=\"stats-grid\">\n        <div class=\"stat-item\">\n            <span class=\"stat-number\"><?php echo $stats->total_notifications ?? 0; ?><\/span>\n            <span class=\"stat-label\">Total Notifications (30 days)<\/span>\n        <\/div>\n        <div class=\"stat-item\">\n            <span class=\"stat-number\"><?php echo $stats->emails_sent ?? 0; ?><\/span>\n            <span class=\"stat-label\">Emails Sent<\/span>\n        <\/div>\n        <div class=\"stat-item\">\n            <span class=\"stat-number\"><?php echo $stats->match_notifications ?? 0; ?><\/span>\n            <span class=\"stat-label\">Match Alerts<\/span>\n        <\/div>\n        <div class=\"stat-item\">\n            <span class=\"stat-number\"><?php echo $stats->message_notifications ?? 0; ?><\/span>\n            <span class=\"stat-label\">Message Alerts<\/span>\n        <\/div>\n    <\/div>\n    \n    <div style=\"margin-top: 20px; text-align: center;\">\n        <p><strong>Read Rate:<\/strong> <?php echo $stats->total_notifications > 0 ? round(($stats->read_notifications \/ $stats->total_notifications) * 100) : 0; ?>%<\/p>\n        <p style=\"font-size: 0.9rem; color: #666;\">Based on your activity in the last 30 days<\/p>\n    <\/div>\n    <?php\n    return ob_get_clean();\n}\n\n\/\/ Send test email AJAX handler\nadd_action('wp_ajax_send_test_notification_email', 'jobmatch_send_test_notification_email');\nfunction jobmatch_send_test_notification_email() {\n    check_ajax_referer('jobmatch_nonce', 'nonce');\n    \n    $user_id = get_current_user_id();\n    if (!$user_id) {\n        wp_send_json_error('Not logged in');\n    }\n    \n    \/\/ Create a test notification\n    $test_notification_id = jobmatch_enhanced_add_notification(\n        $user_id,\n        'system',\n        'Test Email Notification',\n        'This is a test email to verify your notification settings are working correctly.',\n        home_url('\/notification-preferences\/'),\n        array('test' => true)\n    );\n    \n    if ($test_notification_id) {\n        \/\/ Force send the email immediately\n        jobmatch_send_notification_email($test_notification_id);\n        wp_send_json_success('Test email sent');\n    } else {\n        wp_send_json_error('Failed to create test notification');\n    }\n}\n\n\/\/ Real-time notification system (placeholder for WebSocket\/Server-Sent Events)\nfunction jobmatch_setup_real_time_notifications() {\n    \/\/ This would integrate with WebSocket or Server-Sent Events\n    \/\/ For now, we'll use polling via AJAX\n    \n    add_action('wp_footer', 'jobmatch_notification_polling_script');\n}\nadd_action('init', 'jobmatch_setup_real_time_notifications');\n\n\/\/ Notification polling script for logged-in users\nfunction jobmatch_notification_polling_script() {\n    if (!is_user_logged_in()) {\n        return;\n    }\n    \n    $user_id = get_current_user_id();\n    ?>\n    <script>\n    (function() {\n        let lastNotificationCheck = 0;\n        let notificationBadge = null;\n        \n        \/\/ Create notification badge if it doesn't exist\n        function initNotificationBadge() {\n            const existingBadge = document.getElementById('notification-badge');\n            if (existingBadge) {\n                notificationBadge = existingBadge;\n                return;\n            }\n            \n            \/\/ Look for navigation menu to add badge\n            const nav = document.querySelector('nav, .menu, .navigation');\n            if (nav) {\n                const badgeElement = document.createElement('div');\n                badgeElement.id = 'notification-badge';\n                badgeElement.className = 'notification-badge';\n                badgeElement.style.cssText = `\n                    position: fixed;\n                    top: 20px;\n                    right: 20px;\n                    background: linear-gradient(135deg, #667eea, #764ba2);\n                    color: white;\n                    border-radius: 50%;\n                    width: 24px;\n                    height: 24px;\n                    display: none;\n                    align-items: center;\n                    justify-content: center;\n                    font-size: 12px;\n                    font-weight: bold;\n                    z-index: 1000;\n                    cursor: pointer;\n                `;\n                badgeElement.onclick = function() {\n                    window.location.href = '<?php echo home_url('\/notifications\/'); ?>';\n                };\n                document.body.appendChild(badgeElement);\n                notificationBadge = badgeElement;\n            }\n        }\n        \n        \/\/ Check for new notifications\n        function checkNotifications() {\n            jQuery.post('<?php echo admin_url('admin-ajax.php'); ?>', {\n                action: 'check_new_notifications',\n                last_check: lastNotificationCheck,\n                nonce: '<?php echo wp_create_nonce('jobmatch_nonce'); ?>'\n            }, function(response) {\n                if (response.success && response.data.count > 0) {\n                    updateNotificationBadge(response.data.count);\n                    \n                    \/\/ Show desktop notification if permission granted\n                    if (Notification.permission === 'granted' && response.data.latest) {\n                        new Notification(response.data.latest.title, {\n                            body: response.data.latest.message,\n                            icon: '<?php echo get_site_icon_url(32); ?>'\n                        });\n                    }\n                }\n                lastNotificationCheck = Math.floor(Date.now() \/ 1000);\n            });\n        }\n        \n        \/\/ Update notification badge\n        function updateNotificationBadge(count) {\n            if (notificationBadge) {\n                notificationBadge.textContent = count > 99 ? '99+' : count;\n                notificationBadge.style.display = count > 0 ? 'flex' : 'none';\n            }\n        }\n        \n        \/\/ Request desktop notification permission\n        function requestNotificationPermission() {\n            if ('Notification' in window && Notification.permission === 'default') {\n                Notification.requestPermission();\n            }\n        }\n        \n        \/\/ Initialize\n        document.addEventListener('DOMContentLoaded', function() {\n            initNotificationBadge();\n            checkNotifications();\n            requestNotificationPermission();\n            \n            \/\/ Poll every 30 seconds\n            setInterval(checkNotifications, 30000);\n        });\n    })();\n    <\/script>\n    <?php\n}\n\n\/\/ AJAX handler for checking new notifications\nadd_action('wp_ajax_check_new_notifications', 'jobmatch_check_new_notifications');\nfunction jobmatch_check_new_notifications() {\n    check_ajax_referer('jobmatch_nonce', 'nonce');\n    \n    $user_id = get_current_user_id();\n    if (!$user_id) {\n        wp_send_json_error('Not logged in');\n    }\n    \n    $last_check = intval($_POST['last_check']);\n    $last_check_date = date('Y-m-d H:i:s', $last_check);\n    \n    global $wpdb;\n    $table_name = $wpdb->prefix . 'jobmatch_notifications';\n    \n    \/\/ Get unread notifications\n    $unread_count = $wpdb->get_var($wpdb->prepare(\n        \"SELECT COUNT(*) FROM $table_name WHERE user_id = %d AND is_read = 0\",\n        $user_id\n    ));\n    \n    \/\/ Get latest notification if there's a new one\n    $latest = null;\n    if ($last_check > 0) {\n        $latest = $wpdb->get_row($wpdb->prepare(\n            \"SELECT * FROM $table_name \n             WHERE user_id = %d \n             AND created_at > %s \n             ORDER BY created_at DESC \n             LIMIT 1\",\n            $user_id, $last_check_date\n        ));\n    }\n    \n    wp_send_json_success(array(\n        'count' => intval($unread_count),\n        'latest' => $latest ? array(\n            'title' => $latest->title,\n            'message' => $latest->message\n        ) : null\n    ));\n}\n\n\/\/ Weekly digest email system\nadd_action('wp', 'jobmatch_schedule_weekly_digest');\nfunction jobmatch_schedule_weekly_digest() {\n    if (!wp_next_scheduled('jobmatch_send_weekly_digest')) {\n        wp_schedule_event(strtotime('next monday 9:00'), 'weekly', 'jobmatch_send_weekly_digest');\n    }\n}\n\nadd_action('jobmatch_send_weekly_digest', 'jobmatch_send_weekly_digest');\nfunction jobmatch_send_weekly_digest() {\n    \/\/ Get all users who have email notifications enabled\n    $users = get_users(array(\n        'meta_key' => 'email_notifications_enabled',\n        'meta_value' => 'yes',\n        'number' => -1\n    ));\n    \n    foreach ($users as $user) {\n        \/\/ Check if user wants weekly digest\n        $notification_settings = get_user_meta($user->ID, 'notification_preferences', true) ?: array();\n        \n        if (($notification_settings['system'] ?? 'app_only') !== 'disabled') {\n            jobmatch_send_user_weekly_digest($user);\n        }\n    }\n}\n\n\/\/ Send individual weekly digest\nfunction jobmatch_send_user_weekly_digest($user) {\n    $user_role = get_user_meta($user->ID, 'user_role', true);\n    \n    \/\/ Get weekly stats\n    $stats = jobmatch_get_user_weekly_stats($user->ID);\n    \n    if ($stats['total_activity'] === 0) {\n        return; \/\/ No activity this week, skip digest\n    }\n    \n    $subject = \"Your weekly DevMatch summary\";\n    $body = jobmatch_render_weekly_digest_email($user, $stats, $user_role);\n    \n    $headers = array(\n        'Content-Type: text\/html; charset=UTF-8',\n        'From: DevMatch <noreply@devmatch.com>'\n    );\n    \n    wp_mail($user->user_email, $subject, $body, $headers);\n}\n\n\/\/ Get user weekly statistics\nfunction jobmatch_get_user_weekly_stats($user_id) {\n    global $wpdb;\n    \n    $notifications_table = $wpdb->prefix . 'jobmatch_notifications';\n    \n    \/\/ Get stats for the past week\n    $stats = $wpdb->get_row($wpdb->prepare(\"\n        SELECT \n            COUNT(CASE WHEN type IN ('new_match', 'mutual_match') THEN 1 END) as new_matches,\n            COUNT(CASE WHEN type = 'new_message' THEN 1 END) as new_messages,\n            COUNT(CASE WHEN type = 'high_match_job' THEN 1 END) as job_alerts,\n            COUNT(*) as total_activity\n        FROM $notifications_table \n        WHERE user_id = %d \n        AND created_at >= DATE_SUB(NOW(), INTERVAL 7 DAY)\n    \", $user_id));\n    \n    return array(\n        'new_matches' => intval($stats->new_matches ?? 0),\n        'new_messages' => intval($stats->new_messages ?? 0),\n        'job_alerts' => intval($stats->job_alerts ?? 0),\n        'total_activity' => intval($stats->total_activity ?? 0)\n    );\n}","active":true,"modified":"2025-09-24 19:56:47","revision":"1"}]}